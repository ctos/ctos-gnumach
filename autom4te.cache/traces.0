m4trace:/usr/share/aclocal-1.11/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.11'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.11.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.11/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.11.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.11/as.m4:13: -1- AC_DEFUN([AM_PROG_AS], [# By default we simply use the C compiler to build assembly code.
AC_REQUIRE([AC_PROG_CC])
test "${CCAS+set}" = set || CCAS=$CC
test "${CCASFLAGS+set}" = set || CCASFLAGS=$CFLAGS
AC_ARG_VAR([CCAS],      [assembler compiler command (defaults to CC)])
AC_ARG_VAR([CCASFLAGS], [assembler compiler flags (defaults to CFLAGS)])
_AM_IF_OPTION([no-dependencies],, [_AM_DEPENDENCIES([CCAS])])dnl
])
m4trace:/usr/share/aclocal-1.11/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [dnl Rely on autoconf to set up CDPATH properly.
AC_PREREQ([2.50])dnl
# expand $ac_aux_dir to an absolute path
am_aux_dir=`cd $ac_aux_dir && pwd`
])
m4trace:/usr/share/aclocal-1.11/cond.m4:15: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ(2.52)dnl
 ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
	[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.11/depend.m4:28: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

ifelse([$1], CC,   [depcc="$CC"   am_compiler_list=],
       [$1], CXX,  [depcc="$CXX"  am_compiler_list=],
       [$1], OBJC, [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
       [$1], UPC,  [depcc="$UPC"  am_compiler_list=],
       [$1], GCJ,  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                   [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named `D' -- because `-MD' means `put the output
  # in D'.
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
      # Solaris 8's {/usr,}/bin/sh.
      touch sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with `-c' and `-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle `-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # after this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvisualcpp | msvcmsys)
      # This compiler won't grok `-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.11/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.11/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE(dependency-tracking,
[  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/depout.m4:14: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/share/aclocal-1.11/depout.m4:75: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/share/aclocal-1.11/init.m4:26: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.62])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(m4_ifdef([AC_PACKAGE_NAME], 1)m4_ifdef([AC_PACKAGE_VERSION], 1), 11,,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})
AM_MISSING_PROG(AUTOCONF, autoconf)
AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})
AM_MISSING_PROG(AUTOHEADER, autoheader)
AM_MISSING_PROG(MAKEINFO, makeinfo)
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AM_PROG_MKDIR_P])dnl
# We need awk for the "check" target.  The system "awk" is bad on
# some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl
dnl The `parallel-tests' driver may need to know about EXEEXT, so add the
dnl `am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro
dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl
])
m4trace:/usr/share/aclocal-1.11/init.m4:126: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.11/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST(install_sh)])
m4trace:/usr/share/aclocal-1.11/lead-dot.m4:12: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.11/make.m4:14: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from `make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/share/aclocal-1.11/minuso.m4:14: -1- AC_DEFUN([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC_C_O])dnl
AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
# FIXME: we rely on the cache variable name because
# there is no other way.
set dummy $CC
am_cc=`echo $[2] | sed ['s/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/']`
eval am_t=\$ac_cv_prog_cc_${am_cc}_c_o
if test "$am_t" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
dnl Make sure AC_PROG_CC is never called again, or it will override our
dnl setting of CC.
m4_define([AC_PROG_CC],
          [m4_fatal([AC_PROG_CC cannot be called after AM_PROG_CC_C_O])])
])
m4trace:/usr/share/aclocal-1.11/missing.m4:14: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.11/missing.m4:24: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --run true"; then
  am_missing_run="$MISSING --run "
else
  am_missing_run=
  AC_MSG_WARN([`missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.11/mkdirp.m4:11: -1- AC_DEFUN([AM_PROG_MKDIR_P], [AC_PREREQ([2.60])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,
dnl while keeping a definition of mkdir_p for backward compatibility.
dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.
dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of
dnl Makefile.ins that do not define MKDIR_P, so we do our own
dnl adjustment using top_builddir (which is defined more often than
dnl MKDIR_P).
AC_SUBST([mkdir_p], ["$MKDIR_P"])dnl
case $mkdir_p in
  [[\\/$]]* | ?:[[\\/]]*) ;;
  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
esac
])
m4trace:/usr/share/aclocal-1.11/options.m4:13: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.11/options.m4:19: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), 1)])
m4trace:/usr/share/aclocal-1.11/options.m4:25: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.11/options.m4:31: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.11/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.11/sanity.m4:14: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Just in case
sleep 1
echo timestamp > conftest.file
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;
esac

# Do `set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$[*]" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$[*]" != "X $srcdir/configure conftest.file" \
      && test "$[*]" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
alias in your environment])
   fi

   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT(yes)])
m4trace:/usr/share/aclocal-1.11/silent.m4:14: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules],
[  --enable-silent-rules          less verbose build output (undo: `make V=1')
  --disable-silent-rules         verbose build output (undo: `make V=0')])
case $enable_silent_rules in
yes) AM_DEFAULT_VERBOSITY=0;;
no)  AM_DEFAULT_VERBOSITY=1;;
*)   AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using `strip' when the user
# run `make install-strip'.  However `strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the `STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be `maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.11/substnot.m4:14: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.11/substnot.m4:19: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.11/tar.m4:24: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.
AM_MISSING_PROG([AMTAR], [tar])
m4_if([$1], [v7],
     [am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'],
     [m4_case([$1], [ustar],, [pax],,
              [m4_fatal([Unknown tar format])])
AC_MSG_CHECKING([how to create a $1 tar archive])
# Loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
_am_tools=${am_cv_prog_tar_$1-$_am_tools}
# Do not fold the above two line into one, because Tru64 sh and
# Solaris sh will not grok spaces in the rhs of `-'.
for _am_tool in $_am_tools
do
  case $_am_tool in
  gnutar)
    for _am_tar in tar gnutar gtar;
    do
      AM_RUN_LOG([$_am_tar --version]) && break
    done
    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
    am__untar="$_am_tar -xf -"
    ;;
  plaintar)
    # Must skip GNU tar: if it does not support --format= it doesn't create
    # ustar tarball either.
    (tar --version) >/dev/null 2>&1 && continue
    am__tar='tar chf - "$$tardir"'
    am__tar_='tar chf - "$tardir"'
    am__untar='tar xf -'
    ;;
  pax)
    am__tar='pax -L -x $1 -w "$$tardir"'
    am__tar_='pax -L -x $1 -w "$tardir"'
    am__untar='pax -r'
    ;;
  cpio)
    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
    am__untar='cpio -i -H $1 -d'
    ;;
  none)
    am__tar=false
    am__tar_=false
    am__untar=false
    ;;
  esac

  # If the value was cached, stop now.  We just wanted to have am__tar
  # and am__untar set.
  test -n "${am_cv_prog_tar_$1}" && break

  # tar/untar a dummy directory, and stop if the command works
  rm -rf conftest.dir
  mkdir conftest.dir
  echo GrepMe > conftest.dir/file
  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
  rm -rf conftest.dir
  if test -s conftest.tar; then
    AM_RUN_LOG([$am__untar <conftest.tar])
    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
  fi
done
rm -rf conftest.dir

AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
AC_MSG_RESULT([$am_cv_prog_tar_$1])])
AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:configure.ac:19: -1- m4_include([version.m4])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:20: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:26: -1- AM_INIT_AUTOMAKE([1.10.2
  no-define
  subdir-objects
  -Wall -Wno-portability
])
m4trace:configure.ac:26: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:26: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:26: -1- AM_AUTOMAKE_VERSION([1.11.1])
m4trace:configure.ac:26: -1- _AM_AUTOCONF_VERSION([2.68])
m4trace:configure.ac:26: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:26: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:26: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:26: -1- _AM_SET_OPTIONS([1.10.2
  no-define
  subdir-objects
  -Wall -Wno-portability
])
m4trace:configure.ac:26: -1- _AM_SET_OPTION([1.10.2])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([1.10.2])
m4trace:configure.ac:26: -1- _AM_SET_OPTION([no-define])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:26: -1- _AM_SET_OPTION([subdir-objects])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([subdir-objects])
m4trace:configure.ac:26: -1- _AM_SET_OPTION([-Wall])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([-Wall])
m4trace:configure.ac:26: -1- _AM_SET_OPTION([-Wno-portability])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([-Wno-portability])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:26: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:26: -1- AM_SANITY_CHECK
m4trace:configure.ac:26: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:26: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:26: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:26: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:26: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:26: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:26: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:26: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:26: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:26: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:26: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:26: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:26: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:26: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:26: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:26: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:26: -1- AM_PROG_MKDIR_P
m4trace:configure.ac:26: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:26: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:26: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:26: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:26: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:26: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:26: -1- AM_MISSING_PROG([AMTAR], [tar])
m4trace:configure.ac:26: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:26: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:26: -1- _AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])
m4trace:configure.ac:26: -2- _AM_MANGLE_OPTION([silent-rules])
m4trace:configure.ac:42: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:42: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:42: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:42: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:42: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:42: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:42: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:42: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:60: -1- m4_pattern_allow([^host_platform$])
m4trace:configure.ac:69: -1- m4_pattern_allow([^systype$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:76: -1- AM_PROG_AS
m4trace:configure.ac:76: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:76: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:76: -1- AM_SET_DEPDIR
m4trace:configure.ac:76: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:76: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:76: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:76: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:76: -1- AM_DEP_TRACK
m4trace:configure.ac:76: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:76: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:76: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:76: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:76: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:76: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:76: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:76: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:76: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:76: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CCAS$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CCASFLAGS$])
m4trace:configure.ac:76: -1- _AM_IF_OPTION([no-dependencies], [], [_AM_DEPENDENCIES([CCAS])])
m4trace:configure.ac:76: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:76: -1- _AM_DEPENDENCIES([CCAS])
m4trace:configure.ac:76: -1- m4_pattern_allow([^CCASDEPMODE$])
m4trace:configure.ac:76: -1- AM_CONDITIONAL([am__fastdepCCAS], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CCAS_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:76: -1- m4_pattern_allow([^am__fastdepCCAS_TRUE$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^am__fastdepCCAS_FALSE$])
m4trace:configure.ac:76: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_TRUE])
m4trace:configure.ac:76: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_FALSE])
m4trace:configure.ac:77: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:77: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:77: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:77: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:77: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:77: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:77: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:78: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:78: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:78: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:80: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:81: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:83: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^MIG$])
m4trace:configure.ac:88: -1- AM_PROG_CC_C_O
m4trace:configure.ac:88: -1- m4_pattern_allow([^NO_MINUS_C_MINUS_O$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^GZIP$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^PATCH$])
m4trace:configure.ac:102: -1- m4_include([tests/configfrag.ac])
m4trace:configure.ac:131: -1- m4_include([xen/configfrag.ac])
m4trace:xen/configfrag.ac:24: -1- m4_pattern_allow([^MACH_XEN$])
m4trace:xen/configfrag.ac:25: -1- m4_pattern_allow([^MACH_HYP$])
m4trace:xen/configfrag.ac:26: -1- AM_CONDITIONAL([PLATFORM_xen], [true])
m4trace:xen/configfrag.ac:26: -1- m4_pattern_allow([^PLATFORM_xen_TRUE$])
m4trace:xen/configfrag.ac:26: -1- m4_pattern_allow([^PLATFORM_xen_FALSE$])
m4trace:xen/configfrag.ac:26: -1- _AM_SUBST_NOTMAKE([PLATFORM_xen_TRUE])
m4trace:xen/configfrag.ac:26: -1- _AM_SUBST_NOTMAKE([PLATFORM_xen_FALSE])
m4trace:xen/configfrag.ac:31: -1- AM_CONDITIONAL([enable_pseudo_phys], [false])
m4trace:xen/configfrag.ac:31: -1- m4_pattern_allow([^enable_pseudo_phys_TRUE$])
m4trace:xen/configfrag.ac:31: -1- m4_pattern_allow([^enable_pseudo_phys_FALSE$])
m4trace:xen/configfrag.ac:31: -1- _AM_SUBST_NOTMAKE([enable_pseudo_phys_TRUE])
m4trace:xen/configfrag.ac:31: -1- _AM_SUBST_NOTMAKE([enable_pseudo_phys_FALSE])
m4trace:xen/configfrag.ac:33: -1- m4_pattern_allow([^MACH_PSEUDO_PHYS$])
m4trace:xen/configfrag.ac:34: -1- AM_CONDITIONAL([enable_pseudo_phys], [true])
m4trace:xen/configfrag.ac:34: -1- m4_pattern_allow([^enable_pseudo_phys_TRUE$])
m4trace:xen/configfrag.ac:34: -1- m4_pattern_allow([^enable_pseudo_phys_FALSE$])
m4trace:xen/configfrag.ac:34: -1- _AM_SUBST_NOTMAKE([enable_pseudo_phys_TRUE])
m4trace:xen/configfrag.ac:34: -1- _AM_SUBST_NOTMAKE([enable_pseudo_phys_FALSE])
m4trace:xen/configfrag.ac:38: -1- AM_CONDITIONAL([PLATFORM_xen], [false])
m4trace:xen/configfrag.ac:38: -1- m4_pattern_allow([^PLATFORM_xen_TRUE$])
m4trace:xen/configfrag.ac:38: -1- m4_pattern_allow([^PLATFORM_xen_FALSE$])
m4trace:xen/configfrag.ac:38: -1- _AM_SUBST_NOTMAKE([PLATFORM_xen_TRUE])
m4trace:xen/configfrag.ac:38: -1- _AM_SUBST_NOTMAKE([PLATFORM_xen_FALSE])
m4trace:xen/configfrag.ac:39: -1- AM_CONDITIONAL([enable_pseudo_phys], [false])
m4trace:xen/configfrag.ac:39: -1- m4_pattern_allow([^enable_pseudo_phys_TRUE$])
m4trace:xen/configfrag.ac:39: -1- m4_pattern_allow([^enable_pseudo_phys_FALSE$])
m4trace:xen/configfrag.ac:39: -1- _AM_SUBST_NOTMAKE([enable_pseudo_phys_TRUE])
m4trace:xen/configfrag.ac:39: -1- _AM_SUBST_NOTMAKE([enable_pseudo_phys_FALSE])
m4trace:configure.ac:136: -1- m4_include([i386/configfrag.ac])
m4trace:i386/configfrag.ac:22: -1- AM_CONDITIONAL([HOST_ix86], [true])
m4trace:i386/configfrag.ac:22: -1- m4_pattern_allow([^HOST_ix86_TRUE$])
m4trace:i386/configfrag.ac:22: -1- m4_pattern_allow([^HOST_ix86_FALSE$])
m4trace:i386/configfrag.ac:22: -1- _AM_SUBST_NOTMAKE([HOST_ix86_TRUE])
m4trace:i386/configfrag.ac:22: -1- _AM_SUBST_NOTMAKE([HOST_ix86_FALSE])
m4trace:i386/configfrag.ac:25: -1- m4_pattern_allow([^__ELF__$])
m4trace:i386/configfrag.ac:26: -1- m4_pattern_allow([^i386$])
m4trace:i386/configfrag.ac:31: -1- AM_CONDITIONAL([HOST_ix86], [false])
m4trace:i386/configfrag.ac:31: -1- m4_pattern_allow([^HOST_ix86_TRUE$])
m4trace:i386/configfrag.ac:31: -1- m4_pattern_allow([^HOST_ix86_FALSE$])
m4trace:i386/configfrag.ac:31: -1- _AM_SUBST_NOTMAKE([HOST_ix86_TRUE])
m4trace:i386/configfrag.ac:31: -1- _AM_SUBST_NOTMAKE([HOST_ix86_FALSE])
m4trace:i386/configfrag.ac:36: -1- AM_CONDITIONAL([PLATFORM_at], [true])
m4trace:i386/configfrag.ac:36: -1- m4_pattern_allow([^PLATFORM_at_TRUE$])
m4trace:i386/configfrag.ac:36: -1- m4_pattern_allow([^PLATFORM_at_FALSE$])
m4trace:i386/configfrag.ac:36: -1- _AM_SUBST_NOTMAKE([PLATFORM_at_TRUE])
m4trace:i386/configfrag.ac:36: -1- _AM_SUBST_NOTMAKE([PLATFORM_at_FALSE])
m4trace:i386/configfrag.ac:38: -1- AM_CONDITIONAL([PLATFORM_at], [false])
m4trace:i386/configfrag.ac:38: -1- m4_pattern_allow([^PLATFORM_at_TRUE$])
m4trace:i386/configfrag.ac:38: -1- m4_pattern_allow([^PLATFORM_at_FALSE$])
m4trace:i386/configfrag.ac:38: -1- _AM_SUBST_NOTMAKE([PLATFORM_at_TRUE])
m4trace:i386/configfrag.ac:38: -1- _AM_SUBST_NOTMAKE([PLATFORM_at_FALSE])
m4trace:i386/configfrag.ac:53: -1- m4_pattern_allow([^AT386$])
m4trace:i386/configfrag.ac:59: -1- m4_pattern_allow([^AT386$])
m4trace:i386/configfrag.ac:65: -1- m4_pattern_allow([^NCOM$])
m4trace:i386/configfrag.ac:68: -1- m4_pattern_allow([^NLPR$])
m4trace:i386/configfrag.ac:90: -1- m4_pattern_allow([^MACH_LPR$])
m4trace:i386/configfrag.ac:91: -1- AM_CONDITIONAL([enable_lpr], [true])
m4trace:i386/configfrag.ac:91: -1- m4_pattern_allow([^enable_lpr_TRUE$])
m4trace:i386/configfrag.ac:91: -1- m4_pattern_allow([^enable_lpr_FALSE$])
m4trace:i386/configfrag.ac:91: -1- _AM_SUBST_NOTMAKE([enable_lpr_TRUE])
m4trace:i386/configfrag.ac:91: -1- _AM_SUBST_NOTMAKE([enable_lpr_FALSE])
m4trace:i386/configfrag.ac:93: -1- AM_CONDITIONAL([enable_lpr], [false])
m4trace:i386/configfrag.ac:93: -1- m4_pattern_allow([^enable_lpr_TRUE$])
m4trace:i386/configfrag.ac:93: -1- m4_pattern_allow([^enable_lpr_FALSE$])
m4trace:i386/configfrag.ac:93: -1- _AM_SUBST_NOTMAKE([enable_lpr_TRUE])
m4trace:i386/configfrag.ac:93: -1- _AM_SUBST_NOTMAKE([enable_lpr_FALSE])
m4trace:i386/configfrag.ac:111: -1- m4_pattern_allow([^PAE$])
m4trace:i386/configfrag.ac:112: -1- AM_CONDITIONAL([enable_pae], [true])
m4trace:i386/configfrag.ac:112: -1- m4_pattern_allow([^enable_pae_TRUE$])
m4trace:i386/configfrag.ac:112: -1- m4_pattern_allow([^enable_pae_FALSE$])
m4trace:i386/configfrag.ac:112: -1- _AM_SUBST_NOTMAKE([enable_pae_TRUE])
m4trace:i386/configfrag.ac:112: -1- _AM_SUBST_NOTMAKE([enable_pae_FALSE])
m4trace:i386/configfrag.ac:114: -1- AM_CONDITIONAL([enable_pae], [false])
m4trace:i386/configfrag.ac:114: -1- m4_pattern_allow([^enable_pae_TRUE$])
m4trace:i386/configfrag.ac:114: -1- m4_pattern_allow([^enable_pae_FALSE$])
m4trace:i386/configfrag.ac:114: -1- _AM_SUBST_NOTMAKE([enable_pae_TRUE])
m4trace:i386/configfrag.ac:114: -1- _AM_SUBST_NOTMAKE([enable_pae_FALSE])
m4trace:configure.ac:139: -1- m4_include([configfrag.ac])
m4trace:configfrag.ac:20: -1- m4_pattern_allow([^MACH$])
m4trace:configfrag.ac:21: -1- m4_pattern_allow([^CMU$])
m4trace:configfrag.ac:22: -1- m4_pattern_allow([^MACH_KERNEL$])
m4trace:configfrag.ac:23: -1- m4_pattern_allow([^KERNEL$])
m4trace:configfrag.ac:31: -1- m4_pattern_allow([^BOOTSTRAP_SYMBOLS$])
m4trace:configfrag.ac:36: -1- m4_pattern_allow([^NCPUS$])
m4trace:configfrag.ac:38: -1- m4_pattern_allow([^MULTIPROCESSOR$])
m4trace:configfrag.ac:43: -1- m4_pattern_allow([^FAST_TAS$])
m4trace:configfrag.ac:46: -1- m4_pattern_allow([^HW_FOOTPRINT$])
m4trace:configfrag.ac:49: -1- m4_pattern_allow([^MACH_COUNTERS$])
m4trace:configfrag.ac:52: -1- m4_pattern_allow([^MACH_DEBUG$])
m4trace:configfrag.ac:55: -1- m4_pattern_allow([^MACH_FIXPRI$])
m4trace:configfrag.ac:58: -1- m4_pattern_allow([^MACH_HOST$])
m4trace:configfrag.ac:61: -1- m4_pattern_allow([^MACH_IPC_DEBUG$])
m4trace:configfrag.ac:64: -1- m4_pattern_allow([^MACH_IPC_TEST$])
m4trace:configfrag.ac:67: -1- m4_pattern_allow([^MACH_LDEBUG$])
m4trace:configfrag.ac:71: -1- m4_pattern_allow([^MACH_LOCK_MON$])
m4trace:configfrag.ac:75: -1- m4_pattern_allow([^MACH_MACHINE_ROUTINES$])
m4trace:configfrag.ac:80: -1- m4_pattern_allow([^MACH_MP_DEBUG$])
m4trace:configfrag.ac:83: -1- m4_pattern_allow([^MACH_PAGEMAP$])
m4trace:configfrag.ac:86: -1- m4_pattern_allow([^MACH_PCSAMPLE$])
m4trace:configfrag.ac:89: -1- m4_pattern_allow([^MACH_TTD$])
m4trace:configfrag.ac:92: -1- m4_pattern_allow([^MACH_VM_DEBUG$])
m4trace:configfrag.ac:95: -1- m4_pattern_allow([^POWER_SAVE$])
m4trace:configfrag.ac:98: -1- m4_pattern_allow([^SIMPLE_CLOCK$])
m4trace:configfrag.ac:101: -1- m4_pattern_allow([^STAT_TIME$])
m4trace:configfrag.ac:104: -1- m4_pattern_allow([^XPR_DEBUG$])
m4trace:configfrag.ac:113: -1- m4_pattern_allow([^MACH_KDB$])
m4trace:configfrag.ac:114: -1- AM_CONDITIONAL([enable_kdb], [true])
m4trace:configfrag.ac:114: -1- m4_pattern_allow([^enable_kdb_TRUE$])
m4trace:configfrag.ac:114: -1- m4_pattern_allow([^enable_kdb_FALSE$])
m4trace:configfrag.ac:114: -1- _AM_SUBST_NOTMAKE([enable_kdb_TRUE])
m4trace:configfrag.ac:114: -1- _AM_SUBST_NOTMAKE([enable_kdb_FALSE])
m4trace:configfrag.ac:118: -1- m4_pattern_allow([^MACH_KDB$])
m4trace:configfrag.ac:119: -1- AM_CONDITIONAL([enable_kdb], [false])
m4trace:configfrag.ac:119: -1- m4_pattern_allow([^enable_kdb_TRUE$])
m4trace:configfrag.ac:119: -1- m4_pattern_allow([^enable_kdb_FALSE$])
m4trace:configfrag.ac:119: -1- _AM_SUBST_NOTMAKE([enable_kdb_TRUE])
m4trace:configfrag.ac:119: -1- _AM_SUBST_NOTMAKE([enable_kdb_FALSE])
m4trace:configfrag.ac:126: -1- m4_pattern_allow([^MACH_KMSG$])
m4trace:configfrag.ac:127: -1- AM_CONDITIONAL([enable_kmsg], [true])
m4trace:configfrag.ac:127: -1- m4_pattern_allow([^enable_kmsg_TRUE$])
m4trace:configfrag.ac:127: -1- m4_pattern_allow([^enable_kmsg_FALSE$])
m4trace:configfrag.ac:127: -1- _AM_SUBST_NOTMAKE([enable_kmsg_TRUE])
m4trace:configfrag.ac:127: -1- _AM_SUBST_NOTMAKE([enable_kmsg_FALSE])
m4trace:configfrag.ac:129: -1- AM_CONDITIONAL([enable_kmsg], [false])
m4trace:configfrag.ac:129: -1- m4_pattern_allow([^enable_kmsg_TRUE$])
m4trace:configfrag.ac:129: -1- m4_pattern_allow([^enable_kmsg_FALSE$])
m4trace:configfrag.ac:129: -1- _AM_SUBST_NOTMAKE([enable_kmsg_TRUE])
m4trace:configfrag.ac:129: -1- _AM_SUBST_NOTMAKE([enable_kmsg_FALSE])
m4trace:configure.ac:142: -1- m4_include([linux/configfrag.ac])
m4trace:linux/configfrag.ac:61: -1- AC_DEFUN([AC_OPTION_Linux_ix86_at], [
[unset enableval]
AC_ARG_ENABLE([$1],
  AS_HELP_STRING([--enable-$1], [$2]))
[#TODO.  Could use some M4 magic to avoid a lot of shell code.
case $host_platform:$host_cpu in
  at:i?86)
    case $enable_device_drivers:'$2' in
      default:*by\ default* | qemu:*for\ qemu*)
        enableval=${enableval-yes};;
      *)
        enableval=${enableval-no};;
    esac;;
  *)
    if [ x"$enableval" = xyes ]; then
      # TODO.  That might not always be true.]
      AC_MSG_ERROR([cannot enable `$1' in this configuration.])
    [fi;;
esac]
AM_CONDITIONAL([device_driver_]m4_bpatsubst([$1], [-], [_]),
  [[[ x"$enableval" = xyes ]]])
[if [ x"$enableval" = xyes ]; then
  have_linux_code=yes]
  AC_DEFINE([$3], [1], [option $1: $2])
  [device_driver_group $4
fi]])
m4trace:linux/configfrag.ac:92: -1- AC_DEFUN([AC_OPTION_Linux_ix86_at_nodef], [
[unset enableval]
AC_ARG_ENABLE([$1],
  AS_HELP_STRING([--enable-$1], [$2]))
[#TODO.
case $host_platform:$host_cpu in
  at:i?86)
    :;;
  *)
    if [ x"$enableval" = xyes ]; then
      # TODO.  That might not always be true.]
      AC_MSG_ERROR([cannot enable `$1' in this configuration.])
    [fi;;
esac]
AM_CONDITIONAL([device_driver_]m4_bpatsubst([$1], [-], [_]),
  [[[ x"$enableval" = xyes ]]])
[if [ x"$enableval" = xyes ]; then
  have_linux_code=yes]
  AC_DEFINE([$3], [1], [option $1: $2])
  [device_driver_group $4
fi]])
m4trace:linux/configfrag.ac:119: -1- AC_DEFUN([AC_Linux_DRIVER], [
  AC_OPTION_Linux_ix86_at([$1], [Linux device driver for $2; on ix86-at enabled]
    [by default], [$3], [$4])
])
m4trace:linux/configfrag.ac:123: -1- AC_DEFUN([AC_Linux_DRIVER_qemu], [
  AC_OPTION_Linux_ix86_at([$1], [Linux device driver for $2; on ix86-at enabled]
    [by default and for qemu], [$3], [$4])
])
m4trace:linux/configfrag.ac:127: -1- AC_DEFUN([AC_Linux_DRIVER_nodef], [
  AC_OPTION_Linux_ix86_at_nodef([$1], [Linux device driver for $2], [$3], [$4])
])
m4trace:linux/configfrag.ac:135: -1- AC_Linux_DRIVER_qemu([floppy], [PC floppy], [CONFIG_BLK_DEV_FD])
m4trace:linux/configfrag.ac:135: -1- AC_OPTION_Linux_ix86_at([floppy], [Linux device driver for PC floppy; on ix86-at enabled
    by default and for qemu], [CONFIG_BLK_DEV_FD], [])
m4trace:linux/configfrag.ac:135: -1- AM_CONDITIONAL([device_driver_floppy], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:135: -1- m4_pattern_allow([^device_driver_floppy_TRUE$])
m4trace:linux/configfrag.ac:135: -1- m4_pattern_allow([^device_driver_floppy_FALSE$])
m4trace:linux/configfrag.ac:135: -1- _AM_SUBST_NOTMAKE([device_driver_floppy_TRUE])
m4trace:linux/configfrag.ac:135: -1- _AM_SUBST_NOTMAKE([device_driver_floppy_FALSE])
m4trace:linux/configfrag.ac:135: -1- m4_pattern_allow([^CONFIG_BLK_DEV_FD$])
m4trace:linux/configfrag.ac:139: -1- AC_Linux_DRIVER_qemu([ide], [IDE disk controllers], [CONFIG_BLK_DEV_IDE])
m4trace:linux/configfrag.ac:139: -1- AC_OPTION_Linux_ix86_at([ide], [Linux device driver for IDE disk controllers; on ix86-at enabled
    by default and for qemu], [CONFIG_BLK_DEV_IDE], [])
m4trace:linux/configfrag.ac:139: -1- AM_CONDITIONAL([device_driver_ide], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:139: -1- m4_pattern_allow([^device_driver_ide_TRUE$])
m4trace:linux/configfrag.ac:139: -1- m4_pattern_allow([^device_driver_ide_FALSE$])
m4trace:linux/configfrag.ac:139: -1- _AM_SUBST_NOTMAKE([device_driver_ide_TRUE])
m4trace:linux/configfrag.ac:139: -1- _AM_SUBST_NOTMAKE([device_driver_ide_FALSE])
m4trace:linux/configfrag.ac:139: -1- m4_pattern_allow([^CONFIG_BLK_DEV_IDE$])
m4trace:linux/configfrag.ac:145: -1- AC_Linux_DRIVER([53c78xx], [SCSI controller NCR 53C7,8xx], [CONFIG_SCSI_NCR53C7xx], [scsi])
m4trace:linux/configfrag.ac:145: -1- AC_OPTION_Linux_ix86_at([53c78xx], [Linux device driver for SCSI controller NCR 53C7,8xx; on ix86-at enabled
    by default], [CONFIG_SCSI_NCR53C7xx], [scsi])
m4trace:linux/configfrag.ac:145: -1- AM_CONDITIONAL([device_driver_53c78xx], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:145: -1- m4_pattern_allow([^device_driver_53c78xx_TRUE$])
m4trace:linux/configfrag.ac:145: -1- m4_pattern_allow([^device_driver_53c78xx_FALSE$])
m4trace:linux/configfrag.ac:145: -1- _AM_SUBST_NOTMAKE([device_driver_53c78xx_TRUE])
m4trace:linux/configfrag.ac:145: -1- _AM_SUBST_NOTMAKE([device_driver_53c78xx_FALSE])
m4trace:linux/configfrag.ac:145: -1- m4_pattern_allow([^CONFIG_SCSI_NCR53C7xx$])
m4trace:linux/configfrag.ac:149: -1- AC_Linux_DRIVER([AM53C974], [SCSI controller AM53/79C974 (am53c974, am79c974)], [CONFIG_SCSI_AM53C974], [scsi])
m4trace:linux/configfrag.ac:149: -1- AC_OPTION_Linux_ix86_at([AM53C974], [Linux device driver for SCSI controller AM53/79C974 (am53c974, am79c974); on ix86-at enabled
    by default], [CONFIG_SCSI_AM53C974], [scsi])
m4trace:linux/configfrag.ac:149: -1- AM_CONDITIONAL([device_driver_AM53C974], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:149: -1- m4_pattern_allow([^device_driver_AM53C974_TRUE$])
m4trace:linux/configfrag.ac:149: -1- m4_pattern_allow([^device_driver_AM53C974_FALSE$])
m4trace:linux/configfrag.ac:149: -1- _AM_SUBST_NOTMAKE([device_driver_AM53C974_TRUE])
m4trace:linux/configfrag.ac:149: -1- _AM_SUBST_NOTMAKE([device_driver_AM53C974_FALSE])
m4trace:linux/configfrag.ac:149: -1- m4_pattern_allow([^CONFIG_SCSI_AM53C974$])
m4trace:linux/configfrag.ac:153: -1- AC_Linux_DRIVER([BusLogic], [SCSI controller BusLogic], [CONFIG_SCSI_BUSLOGIC], [scsi])
m4trace:linux/configfrag.ac:153: -1- AC_OPTION_Linux_ix86_at([BusLogic], [Linux device driver for SCSI controller BusLogic; on ix86-at enabled
    by default], [CONFIG_SCSI_BUSLOGIC], [scsi])
m4trace:linux/configfrag.ac:153: -1- AM_CONDITIONAL([device_driver_BusLogic], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:153: -1- m4_pattern_allow([^device_driver_BusLogic_TRUE$])
m4trace:linux/configfrag.ac:153: -1- m4_pattern_allow([^device_driver_BusLogic_FALSE$])
m4trace:linux/configfrag.ac:153: -1- _AM_SUBST_NOTMAKE([device_driver_BusLogic_TRUE])
m4trace:linux/configfrag.ac:153: -1- _AM_SUBST_NOTMAKE([device_driver_BusLogic_FALSE])
m4trace:linux/configfrag.ac:153: -1- m4_pattern_allow([^CONFIG_SCSI_BUSLOGIC$])
m4trace:linux/configfrag.ac:159: -1- m4_pattern_allow([^CONFIG_SCSI_OMIT_FLASHPOINT$])
m4trace:linux/configfrag.ac:164: -1- AC_Linux_DRIVER_nodef([NCR53c406a], [SCSI controller NCR53c406a chip], [CONFIG_SCSI_NCR53C406A], [scsi])
m4trace:linux/configfrag.ac:164: -1- AC_OPTION_Linux_ix86_at_nodef([NCR53c406a], [Linux device driver for SCSI controller NCR53c406a chip], [CONFIG_SCSI_NCR53C406A], [scsi])
m4trace:linux/configfrag.ac:164: -1- AM_CONDITIONAL([device_driver_NCR53c406a], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:164: -1- m4_pattern_allow([^device_driver_NCR53c406a_TRUE$])
m4trace:linux/configfrag.ac:164: -1- m4_pattern_allow([^device_driver_NCR53c406a_FALSE$])
m4trace:linux/configfrag.ac:164: -1- _AM_SUBST_NOTMAKE([device_driver_NCR53c406a_TRUE])
m4trace:linux/configfrag.ac:164: -1- _AM_SUBST_NOTMAKE([device_driver_NCR53c406a_FALSE])
m4trace:linux/configfrag.ac:164: -1- m4_pattern_allow([^CONFIG_SCSI_NCR53C406A$])
m4trace:linux/configfrag.ac:168: -1- AC_Linux_DRIVER([advansys], [SCSI controller AdvanSys], [CONFIG_SCSI_ADVANSYS], [scsi])
m4trace:linux/configfrag.ac:168: -1- AC_OPTION_Linux_ix86_at([advansys], [Linux device driver for SCSI controller AdvanSys; on ix86-at enabled
    by default], [CONFIG_SCSI_ADVANSYS], [scsi])
m4trace:linux/configfrag.ac:168: -1- AM_CONDITIONAL([device_driver_advansys], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:168: -1- m4_pattern_allow([^device_driver_advansys_TRUE$])
m4trace:linux/configfrag.ac:168: -1- m4_pattern_allow([^device_driver_advansys_FALSE$])
m4trace:linux/configfrag.ac:168: -1- _AM_SUBST_NOTMAKE([device_driver_advansys_TRUE])
m4trace:linux/configfrag.ac:168: -1- _AM_SUBST_NOTMAKE([device_driver_advansys_FALSE])
m4trace:linux/configfrag.ac:168: -1- m4_pattern_allow([^CONFIG_SCSI_ADVANSYS$])
m4trace:linux/configfrag.ac:172: -1- AC_Linux_DRIVER([aha152x], [SCSI controller Adaptec AHA-152x/2825 (aha152x, aha2825)], [CONFIG_SCSI_AHA152X], [scsi])
m4trace:linux/configfrag.ac:172: -1- AC_OPTION_Linux_ix86_at([aha152x], [Linux device driver for SCSI controller Adaptec AHA-152x/2825 (aha152x, aha2825); on ix86-at enabled
    by default], [CONFIG_SCSI_AHA152X], [scsi])
m4trace:linux/configfrag.ac:172: -1- AM_CONDITIONAL([device_driver_aha152x], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:172: -1- m4_pattern_allow([^device_driver_aha152x_TRUE$])
m4trace:linux/configfrag.ac:172: -1- m4_pattern_allow([^device_driver_aha152x_FALSE$])
m4trace:linux/configfrag.ac:172: -1- _AM_SUBST_NOTMAKE([device_driver_aha152x_TRUE])
m4trace:linux/configfrag.ac:172: -1- _AM_SUBST_NOTMAKE([device_driver_aha152x_FALSE])
m4trace:linux/configfrag.ac:172: -1- m4_pattern_allow([^CONFIG_SCSI_AHA152X$])
m4trace:linux/configfrag.ac:176: -1- AC_Linux_DRIVER([aha1542], [SCSI controller Adaptec AHA-1542], [CONFIG_SCSI_AHA1542], [scsi])
m4trace:linux/configfrag.ac:176: -1- AC_OPTION_Linux_ix86_at([aha1542], [Linux device driver for SCSI controller Adaptec AHA-1542; on ix86-at enabled
    by default], [CONFIG_SCSI_AHA1542], [scsi])
m4trace:linux/configfrag.ac:176: -1- AM_CONDITIONAL([device_driver_aha1542], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:176: -1- m4_pattern_allow([^device_driver_aha1542_TRUE$])
m4trace:linux/configfrag.ac:176: -1- m4_pattern_allow([^device_driver_aha1542_FALSE$])
m4trace:linux/configfrag.ac:176: -1- _AM_SUBST_NOTMAKE([device_driver_aha1542_TRUE])
m4trace:linux/configfrag.ac:176: -1- _AM_SUBST_NOTMAKE([device_driver_aha1542_FALSE])
m4trace:linux/configfrag.ac:176: -1- m4_pattern_allow([^CONFIG_SCSI_AHA1542$])
m4trace:linux/configfrag.ac:180: -1- AC_Linux_DRIVER([aha1740], [SCSI controller Adaptec AHA-1740], [CONFIG_SCSI_AHA1740], [scsi])
m4trace:linux/configfrag.ac:180: -1- AC_OPTION_Linux_ix86_at([aha1740], [Linux device driver for SCSI controller Adaptec AHA-1740; on ix86-at enabled
    by default], [CONFIG_SCSI_AHA1740], [scsi])
m4trace:linux/configfrag.ac:180: -1- AM_CONDITIONAL([device_driver_aha1740], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:180: -1- m4_pattern_allow([^device_driver_aha1740_TRUE$])
m4trace:linux/configfrag.ac:180: -1- m4_pattern_allow([^device_driver_aha1740_FALSE$])
m4trace:linux/configfrag.ac:180: -1- _AM_SUBST_NOTMAKE([device_driver_aha1740_TRUE])
m4trace:linux/configfrag.ac:180: -1- _AM_SUBST_NOTMAKE([device_driver_aha1740_FALSE])
m4trace:linux/configfrag.ac:180: -1- m4_pattern_allow([^CONFIG_SCSI_AHA1740$])
m4trace:linux/configfrag.ac:184: -1- AC_Linux_DRIVER([aic7xxx], [SCSI controller Adaptec AIC7xxx], [CONFIG_SCSI_AIC7XXX], [scsi])
m4trace:linux/configfrag.ac:184: -1- AC_OPTION_Linux_ix86_at([aic7xxx], [Linux device driver for SCSI controller Adaptec AIC7xxx; on ix86-at enabled
    by default], [CONFIG_SCSI_AIC7XXX], [scsi])
m4trace:linux/configfrag.ac:184: -1- AM_CONDITIONAL([device_driver_aic7xxx], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:184: -1- m4_pattern_allow([^device_driver_aic7xxx_TRUE$])
m4trace:linux/configfrag.ac:184: -1- m4_pattern_allow([^device_driver_aic7xxx_FALSE$])
m4trace:linux/configfrag.ac:184: -1- _AM_SUBST_NOTMAKE([device_driver_aic7xxx_TRUE])
m4trace:linux/configfrag.ac:184: -1- _AM_SUBST_NOTMAKE([device_driver_aic7xxx_FALSE])
m4trace:linux/configfrag.ac:184: -1- m4_pattern_allow([^CONFIG_SCSI_AIC7XXX$])
m4trace:linux/configfrag.ac:188: -1- AC_Linux_DRIVER([dtc], [SCSI controller DTC3180/3280 (dtc3180, dtc3280)], [CONFIG_SCSI_DTC3280], [scsi])
m4trace:linux/configfrag.ac:188: -1- AC_OPTION_Linux_ix86_at([dtc], [Linux device driver for SCSI controller DTC3180/3280 (dtc3180, dtc3280); on ix86-at enabled
    by default], [CONFIG_SCSI_DTC3280], [scsi])
m4trace:linux/configfrag.ac:188: -1- AM_CONDITIONAL([device_driver_dtc], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:188: -1- m4_pattern_allow([^device_driver_dtc_TRUE$])
m4trace:linux/configfrag.ac:188: -1- m4_pattern_allow([^device_driver_dtc_FALSE$])
m4trace:linux/configfrag.ac:188: -1- _AM_SUBST_NOTMAKE([device_driver_dtc_TRUE])
m4trace:linux/configfrag.ac:188: -1- _AM_SUBST_NOTMAKE([device_driver_dtc_FALSE])
m4trace:linux/configfrag.ac:188: -1- m4_pattern_allow([^CONFIG_SCSI_DTC3280$])
m4trace:linux/configfrag.ac:192: -1- AC_Linux_DRIVER([eata], [SCSI controller EATA ISA/EISA/PCI
    (DPT and generic EATA/DMA-compliant boards)], [CONFIG_SCSI_EATA], [scsi])
m4trace:linux/configfrag.ac:192: -1- AC_OPTION_Linux_ix86_at([eata], [Linux device driver for SCSI controller EATA ISA/EISA/PCI
    (DPT and generic EATA/DMA-compliant boards); on ix86-at enabled
    by default], [CONFIG_SCSI_EATA], [scsi])
m4trace:linux/configfrag.ac:192: -1- AM_CONDITIONAL([device_driver_eata], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:192: -1- m4_pattern_allow([^device_driver_eata_TRUE$])
m4trace:linux/configfrag.ac:192: -1- m4_pattern_allow([^device_driver_eata_FALSE$])
m4trace:linux/configfrag.ac:192: -1- _AM_SUBST_NOTMAKE([device_driver_eata_TRUE])
m4trace:linux/configfrag.ac:192: -1- _AM_SUBST_NOTMAKE([device_driver_eata_FALSE])
m4trace:linux/configfrag.ac:192: -1- m4_pattern_allow([^CONFIG_SCSI_EATA$])
m4trace:linux/configfrag.ac:198: -1- AC_Linux_DRIVER_nodef([eata_dma], [SCSI controller EATA-DMA (DPT, NEC, AT&T, SNI, AST, Olivetti, Alphatronix)], [CONFIG_SCSI_EATA_DMA], [scsi])
m4trace:linux/configfrag.ac:198: -1- AC_OPTION_Linux_ix86_at_nodef([eata_dma], [Linux device driver for SCSI controller EATA-DMA (DPT, NEC, AT&T, SNI, AST, Olivetti, Alphatronix)], [CONFIG_SCSI_EATA_DMA], [scsi])
m4trace:linux/configfrag.ac:198: -1- AM_CONDITIONAL([device_driver_eata_dma], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:198: -1- m4_pattern_allow([^device_driver_eata_dma_TRUE$])
m4trace:linux/configfrag.ac:198: -1- m4_pattern_allow([^device_driver_eata_dma_FALSE$])
m4trace:linux/configfrag.ac:198: -1- _AM_SUBST_NOTMAKE([device_driver_eata_dma_TRUE])
m4trace:linux/configfrag.ac:198: -1- _AM_SUBST_NOTMAKE([device_driver_eata_dma_FALSE])
m4trace:linux/configfrag.ac:198: -1- m4_pattern_allow([^CONFIG_SCSI_EATA_DMA$])
m4trace:linux/configfrag.ac:202: -1- AC_Linux_DRIVER([eata_pio], [SCSI controller EATA-PIO (old DPT PM2001, PM2012A)], [CONFIG_SCSI_EATA_PIO], [scsi])
m4trace:linux/configfrag.ac:202: -1- AC_OPTION_Linux_ix86_at([eata_pio], [Linux device driver for SCSI controller EATA-PIO (old DPT PM2001, PM2012A); on ix86-at enabled
    by default], [CONFIG_SCSI_EATA_PIO], [scsi])
m4trace:linux/configfrag.ac:202: -1- AM_CONDITIONAL([device_driver_eata_pio], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:202: -1- m4_pattern_allow([^device_driver_eata_pio_TRUE$])
m4trace:linux/configfrag.ac:202: -1- m4_pattern_allow([^device_driver_eata_pio_FALSE$])
m4trace:linux/configfrag.ac:202: -1- _AM_SUBST_NOTMAKE([device_driver_eata_pio_TRUE])
m4trace:linux/configfrag.ac:202: -1- _AM_SUBST_NOTMAKE([device_driver_eata_pio_FALSE])
m4trace:linux/configfrag.ac:202: -1- m4_pattern_allow([^CONFIG_SCSI_EATA_PIO$])
m4trace:linux/configfrag.ac:206: -1- AC_Linux_DRIVER([fdomain], [SCSI controller Future Domain 16xx], [CONFIG_SCSI_FUTURE_DOMAIN], [scsi])
m4trace:linux/configfrag.ac:206: -1- AC_OPTION_Linux_ix86_at([fdomain], [Linux device driver for SCSI controller Future Domain 16xx; on ix86-at enabled
    by default], [CONFIG_SCSI_FUTURE_DOMAIN], [scsi])
m4trace:linux/configfrag.ac:206: -1- AM_CONDITIONAL([device_driver_fdomain], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:206: -1- m4_pattern_allow([^device_driver_fdomain_TRUE$])
m4trace:linux/configfrag.ac:206: -1- m4_pattern_allow([^device_driver_fdomain_FALSE$])
m4trace:linux/configfrag.ac:206: -1- _AM_SUBST_NOTMAKE([device_driver_fdomain_TRUE])
m4trace:linux/configfrag.ac:206: -1- _AM_SUBST_NOTMAKE([device_driver_fdomain_FALSE])
m4trace:linux/configfrag.ac:206: -1- m4_pattern_allow([^CONFIG_SCSI_FUTURE_DOMAIN$])
m4trace:linux/configfrag.ac:211: -1- AC_Linux_DRIVER_nodef([g_NCR5380], [SCSI controller Generic NCR5380/53c400 (ncr5380, ncr53c400)], [CONFIG_SCSI_GENERIC_NCR5380], [scsi])
m4trace:linux/configfrag.ac:211: -1- AC_OPTION_Linux_ix86_at_nodef([g_NCR5380], [Linux device driver for SCSI controller Generic NCR5380/53c400 (ncr5380, ncr53c400)], [CONFIG_SCSI_GENERIC_NCR5380], [scsi])
m4trace:linux/configfrag.ac:211: -1- AM_CONDITIONAL([device_driver_g_NCR5380], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:211: -1- m4_pattern_allow([^device_driver_g_NCR5380_TRUE$])
m4trace:linux/configfrag.ac:211: -1- m4_pattern_allow([^device_driver_g_NCR5380_FALSE$])
m4trace:linux/configfrag.ac:211: -1- _AM_SUBST_NOTMAKE([device_driver_g_NCR5380_TRUE])
m4trace:linux/configfrag.ac:211: -1- _AM_SUBST_NOTMAKE([device_driver_g_NCR5380_FALSE])
m4trace:linux/configfrag.ac:211: -1- m4_pattern_allow([^CONFIG_SCSI_GENERIC_NCR5380$])
m4trace:linux/configfrag.ac:215: -1- AC_Linux_DRIVER([gdth], [GDT SCSI Disk Array Controller], [CONFIG_SCSI_GDTH], [scsi])
m4trace:linux/configfrag.ac:215: -1- AC_OPTION_Linux_ix86_at([gdth], [Linux device driver for GDT SCSI Disk Array Controller; on ix86-at enabled
    by default], [CONFIG_SCSI_GDTH], [scsi])
m4trace:linux/configfrag.ac:215: -1- AM_CONDITIONAL([device_driver_gdth], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:215: -1- m4_pattern_allow([^device_driver_gdth_TRUE$])
m4trace:linux/configfrag.ac:215: -1- m4_pattern_allow([^device_driver_gdth_FALSE$])
m4trace:linux/configfrag.ac:215: -1- _AM_SUBST_NOTMAKE([device_driver_gdth_TRUE])
m4trace:linux/configfrag.ac:215: -1- _AM_SUBST_NOTMAKE([device_driver_gdth_FALSE])
m4trace:linux/configfrag.ac:215: -1- m4_pattern_allow([^CONFIG_SCSI_GDTH$])
m4trace:linux/configfrag.ac:219: -1- AC_Linux_DRIVER([in2000], [SCSI controller Always IN 2000], [CONFIG_SCSI_IN2000], [scsi])
m4trace:linux/configfrag.ac:219: -1- AC_OPTION_Linux_ix86_at([in2000], [Linux device driver for SCSI controller Always IN 2000; on ix86-at enabled
    by default], [CONFIG_SCSI_IN2000], [scsi])
m4trace:linux/configfrag.ac:219: -1- AM_CONDITIONAL([device_driver_in2000], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:219: -1- m4_pattern_allow([^device_driver_in2000_TRUE$])
m4trace:linux/configfrag.ac:219: -1- m4_pattern_allow([^device_driver_in2000_FALSE$])
m4trace:linux/configfrag.ac:219: -1- _AM_SUBST_NOTMAKE([device_driver_in2000_TRUE])
m4trace:linux/configfrag.ac:219: -1- _AM_SUBST_NOTMAKE([device_driver_in2000_FALSE])
m4trace:linux/configfrag.ac:219: -1- m4_pattern_allow([^CONFIG_SCSI_IN2000$])
m4trace:linux/configfrag.ac:223: -1- AC_Linux_DRIVER([ncr53c8xx], [SCSI controller NCR53C8XX (ncr53c8xx, dc390f, dc390u, dc390w)], [CONFIG_SCSI_NCR53C8XX], [scsi])
m4trace:linux/configfrag.ac:223: -1- AC_OPTION_Linux_ix86_at([ncr53c8xx], [Linux device driver for SCSI controller NCR53C8XX (ncr53c8xx, dc390f, dc390u, dc390w); on ix86-at enabled
    by default], [CONFIG_SCSI_NCR53C8XX], [scsi])
m4trace:linux/configfrag.ac:223: -1- AM_CONDITIONAL([device_driver_ncr53c8xx], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:223: -1- m4_pattern_allow([^device_driver_ncr53c8xx_TRUE$])
m4trace:linux/configfrag.ac:223: -1- m4_pattern_allow([^device_driver_ncr53c8xx_FALSE$])
m4trace:linux/configfrag.ac:223: -1- _AM_SUBST_NOTMAKE([device_driver_ncr53c8xx_TRUE])
m4trace:linux/configfrag.ac:223: -1- _AM_SUBST_NOTMAKE([device_driver_ncr53c8xx_FALSE])
m4trace:linux/configfrag.ac:223: -1- m4_pattern_allow([^CONFIG_SCSI_NCR53C8XX$])
m4trace:linux/configfrag.ac:227: -1- AC_Linux_DRIVER([pas16], [SCSI controller PAS16], [CONFIG_SCSI_PASS16], [scsi])
m4trace:linux/configfrag.ac:227: -1- AC_OPTION_Linux_ix86_at([pas16], [Linux device driver for SCSI controller PAS16; on ix86-at enabled
    by default], [CONFIG_SCSI_PASS16], [scsi])
m4trace:linux/configfrag.ac:227: -1- AM_CONDITIONAL([device_driver_pas16], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:227: -1- m4_pattern_allow([^device_driver_pas16_TRUE$])
m4trace:linux/configfrag.ac:227: -1- m4_pattern_allow([^device_driver_pas16_FALSE$])
m4trace:linux/configfrag.ac:227: -1- _AM_SUBST_NOTMAKE([device_driver_pas16_TRUE])
m4trace:linux/configfrag.ac:227: -1- _AM_SUBST_NOTMAKE([device_driver_pas16_FALSE])
m4trace:linux/configfrag.ac:227: -1- m4_pattern_allow([^CONFIG_SCSI_PASS16$])
m4trace:linux/configfrag.ac:231: -1- AC_Linux_DRIVER([ppa], [IOMEGA Parallel Port ZIP drive], [CONFIG_SCSI_PPA], [scsi])
m4trace:linux/configfrag.ac:231: -1- AC_OPTION_Linux_ix86_at([ppa], [Linux device driver for IOMEGA Parallel Port ZIP drive; on ix86-at enabled
    by default], [CONFIG_SCSI_PPA], [scsi])
m4trace:linux/configfrag.ac:231: -1- AM_CONDITIONAL([device_driver_ppa], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:231: -1- m4_pattern_allow([^device_driver_ppa_TRUE$])
m4trace:linux/configfrag.ac:231: -1- m4_pattern_allow([^device_driver_ppa_FALSE$])
m4trace:linux/configfrag.ac:231: -1- _AM_SUBST_NOTMAKE([device_driver_ppa_TRUE])
m4trace:linux/configfrag.ac:231: -1- _AM_SUBST_NOTMAKE([device_driver_ppa_FALSE])
m4trace:linux/configfrag.ac:231: -1- m4_pattern_allow([^CONFIG_SCSI_PPA$])
m4trace:linux/configfrag.ac:235: -1- AC_Linux_DRIVER([qlogicfas], [SCSI controller Qlogic FAS], [CONFIG_SCSI_QLOGIC_FAS], [scsi])
m4trace:linux/configfrag.ac:235: -1- AC_OPTION_Linux_ix86_at([qlogicfas], [Linux device driver for SCSI controller Qlogic FAS; on ix86-at enabled
    by default], [CONFIG_SCSI_QLOGIC_FAS], [scsi])
m4trace:linux/configfrag.ac:235: -1- AM_CONDITIONAL([device_driver_qlogicfas], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:235: -1- m4_pattern_allow([^device_driver_qlogicfas_TRUE$])
m4trace:linux/configfrag.ac:235: -1- m4_pattern_allow([^device_driver_qlogicfas_FALSE$])
m4trace:linux/configfrag.ac:235: -1- _AM_SUBST_NOTMAKE([device_driver_qlogicfas_TRUE])
m4trace:linux/configfrag.ac:235: -1- _AM_SUBST_NOTMAKE([device_driver_qlogicfas_FALSE])
m4trace:linux/configfrag.ac:235: -1- m4_pattern_allow([^CONFIG_SCSI_QLOGIC_FAS$])
m4trace:linux/configfrag.ac:239: -1- AC_Linux_DRIVER([qlogicisp], [SCSI controller Qlogic ISP], [CONFIG_SCSI_QLOGIC_ISP], [scsi])
m4trace:linux/configfrag.ac:239: -1- AC_OPTION_Linux_ix86_at([qlogicisp], [Linux device driver for SCSI controller Qlogic ISP; on ix86-at enabled
    by default], [CONFIG_SCSI_QLOGIC_ISP], [scsi])
m4trace:linux/configfrag.ac:239: -1- AM_CONDITIONAL([device_driver_qlogicisp], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:239: -1- m4_pattern_allow([^device_driver_qlogicisp_TRUE$])
m4trace:linux/configfrag.ac:239: -1- m4_pattern_allow([^device_driver_qlogicisp_FALSE$])
m4trace:linux/configfrag.ac:239: -1- _AM_SUBST_NOTMAKE([device_driver_qlogicisp_TRUE])
m4trace:linux/configfrag.ac:239: -1- _AM_SUBST_NOTMAKE([device_driver_qlogicisp_FALSE])
m4trace:linux/configfrag.ac:239: -1- m4_pattern_allow([^CONFIG_SCSI_QLOGIC_ISP$])
m4trace:linux/configfrag.ac:243: -1- AC_Linux_DRIVER([seagate], [SCSI controller Seagate ST02, Future Domain TMC-8xx], [CONFIG_SCSI_SEAGATE], [scsi])
m4trace:linux/configfrag.ac:243: -1- AC_OPTION_Linux_ix86_at([seagate], [Linux device driver for SCSI controller Seagate ST02, Future Domain TMC-8xx; on ix86-at enabled
    by default], [CONFIG_SCSI_SEAGATE], [scsi])
m4trace:linux/configfrag.ac:243: -1- AM_CONDITIONAL([device_driver_seagate], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:243: -1- m4_pattern_allow([^device_driver_seagate_TRUE$])
m4trace:linux/configfrag.ac:243: -1- m4_pattern_allow([^device_driver_seagate_FALSE$])
m4trace:linux/configfrag.ac:243: -1- _AM_SUBST_NOTMAKE([device_driver_seagate_TRUE])
m4trace:linux/configfrag.ac:243: -1- _AM_SUBST_NOTMAKE([device_driver_seagate_FALSE])
m4trace:linux/configfrag.ac:243: -1- m4_pattern_allow([^CONFIG_SCSI_SEAGATE$])
m4trace:linux/configfrag.ac:247: -1- AC_Linux_DRIVER([t128], [SCSI controller Trantor T128/T128F/T228 (t128, t128f, t228)], [CONFIG_SCSI_T128], [scsi])
m4trace:linux/configfrag.ac:247: -1- AC_OPTION_Linux_ix86_at([t128], [Linux device driver for SCSI controller Trantor T128/T128F/T228 (t128, t128f, t228); on ix86-at enabled
    by default], [CONFIG_SCSI_T128], [scsi])
m4trace:linux/configfrag.ac:247: -1- AM_CONDITIONAL([device_driver_t128], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:247: -1- m4_pattern_allow([^device_driver_t128_TRUE$])
m4trace:linux/configfrag.ac:247: -1- m4_pattern_allow([^device_driver_t128_FALSE$])
m4trace:linux/configfrag.ac:247: -1- _AM_SUBST_NOTMAKE([device_driver_t128_TRUE])
m4trace:linux/configfrag.ac:247: -1- _AM_SUBST_NOTMAKE([device_driver_t128_FALSE])
m4trace:linux/configfrag.ac:247: -1- m4_pattern_allow([^CONFIG_SCSI_T128$])
m4trace:linux/configfrag.ac:251: -1- AC_Linux_DRIVER([tmscsim], [SCSI controller Tekram DC-390(T) (dc390, dc390t)], [CONFIG_SCSI_DC390T], [scsi])
m4trace:linux/configfrag.ac:251: -1- AC_OPTION_Linux_ix86_at([tmscsim], [Linux device driver for SCSI controller Tekram DC-390(T) (dc390, dc390t); on ix86-at enabled
    by default], [CONFIG_SCSI_DC390T], [scsi])
m4trace:linux/configfrag.ac:251: -1- AM_CONDITIONAL([device_driver_tmscsim], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:251: -1- m4_pattern_allow([^device_driver_tmscsim_TRUE$])
m4trace:linux/configfrag.ac:251: -1- m4_pattern_allow([^device_driver_tmscsim_FALSE$])
m4trace:linux/configfrag.ac:251: -1- _AM_SUBST_NOTMAKE([device_driver_tmscsim_TRUE])
m4trace:linux/configfrag.ac:251: -1- _AM_SUBST_NOTMAKE([device_driver_tmscsim_FALSE])
m4trace:linux/configfrag.ac:251: -1- m4_pattern_allow([^CONFIG_SCSI_DC390T$])
m4trace:linux/configfrag.ac:255: -1- AC_Linux_DRIVER([u14-34f], [SCSI controller UltraStor 14F/34F], [CONFIG_SCSI_U14_34F], [scsi])
m4trace:linux/configfrag.ac:255: -1- AC_OPTION_Linux_ix86_at([u14-34f], [Linux device driver for SCSI controller UltraStor 14F/34F; on ix86-at enabled
    by default], [CONFIG_SCSI_U14_34F], [scsi])
m4trace:linux/configfrag.ac:255: -1- AM_CONDITIONAL([device_driver_u14_34f], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:255: -1- m4_pattern_allow([^device_driver_u14_34f_TRUE$])
m4trace:linux/configfrag.ac:255: -1- m4_pattern_allow([^device_driver_u14_34f_FALSE$])
m4trace:linux/configfrag.ac:255: -1- _AM_SUBST_NOTMAKE([device_driver_u14_34f_TRUE])
m4trace:linux/configfrag.ac:255: -1- _AM_SUBST_NOTMAKE([device_driver_u14_34f_FALSE])
m4trace:linux/configfrag.ac:255: -1- m4_pattern_allow([^CONFIG_SCSI_U14_34F$])
m4trace:linux/configfrag.ac:259: -1- AC_Linux_DRIVER([ultrastor], [SCSI controller UltraStor], [CONFIG_SCSI_ULTRASTOR], [scsi])
m4trace:linux/configfrag.ac:259: -1- AC_OPTION_Linux_ix86_at([ultrastor], [Linux device driver for SCSI controller UltraStor; on ix86-at enabled
    by default], [CONFIG_SCSI_ULTRASTOR], [scsi])
m4trace:linux/configfrag.ac:259: -1- AM_CONDITIONAL([device_driver_ultrastor], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:259: -1- m4_pattern_allow([^device_driver_ultrastor_TRUE$])
m4trace:linux/configfrag.ac:259: -1- m4_pattern_allow([^device_driver_ultrastor_FALSE$])
m4trace:linux/configfrag.ac:259: -1- _AM_SUBST_NOTMAKE([device_driver_ultrastor_TRUE])
m4trace:linux/configfrag.ac:259: -1- _AM_SUBST_NOTMAKE([device_driver_ultrastor_FALSE])
m4trace:linux/configfrag.ac:259: -1- m4_pattern_allow([^CONFIG_SCSI_ULTRASTOR$])
m4trace:linux/configfrag.ac:263: -1- AC_Linux_DRIVER([wd7000], [SCSI controller WD 7000], [CONFIG_SCSI_7000FASST], [scsi])
m4trace:linux/configfrag.ac:263: -1- AC_OPTION_Linux_ix86_at([wd7000], [Linux device driver for SCSI controller WD 7000; on ix86-at enabled
    by default], [CONFIG_SCSI_7000FASST], [scsi])
m4trace:linux/configfrag.ac:263: -1- AM_CONDITIONAL([device_driver_wd7000], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:263: -1- m4_pattern_allow([^device_driver_wd7000_TRUE$])
m4trace:linux/configfrag.ac:263: -1- m4_pattern_allow([^device_driver_wd7000_FALSE$])
m4trace:linux/configfrag.ac:263: -1- _AM_SUBST_NOTMAKE([device_driver_wd7000_TRUE])
m4trace:linux/configfrag.ac:263: -1- _AM_SUBST_NOTMAKE([device_driver_wd7000_FALSE])
m4trace:linux/configfrag.ac:263: -1- m4_pattern_allow([^CONFIG_SCSI_7000FASST$])
m4trace:linux/configfrag.ac:270: -1- AC_Linux_DRIVER([3c501], [Ethernet controller 3COM 501 (3c501) / Etherlink I], [CONFIG_EL1], [net])
m4trace:linux/configfrag.ac:270: -1- AC_OPTION_Linux_ix86_at([3c501], [Linux device driver for Ethernet controller 3COM 501 (3c501) / Etherlink I; on ix86-at enabled
    by default], [CONFIG_EL1], [net])
m4trace:linux/configfrag.ac:270: -1- AM_CONDITIONAL([device_driver_3c501], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:270: -1- m4_pattern_allow([^device_driver_3c501_TRUE$])
m4trace:linux/configfrag.ac:270: -1- m4_pattern_allow([^device_driver_3c501_FALSE$])
m4trace:linux/configfrag.ac:270: -1- _AM_SUBST_NOTMAKE([device_driver_3c501_TRUE])
m4trace:linux/configfrag.ac:270: -1- _AM_SUBST_NOTMAKE([device_driver_3c501_FALSE])
m4trace:linux/configfrag.ac:270: -1- m4_pattern_allow([^CONFIG_EL1$])
m4trace:linux/configfrag.ac:274: -1- AC_Linux_DRIVER([3c503], [Ethernet controller 3Com 503 (3c503) / Etherlink II], [CONFIG_EL2], [net])
m4trace:linux/configfrag.ac:274: -1- AC_OPTION_Linux_ix86_at([3c503], [Linux device driver for Ethernet controller 3Com 503 (3c503) / Etherlink II; on ix86-at enabled
    by default], [CONFIG_EL2], [net])
m4trace:linux/configfrag.ac:274: -1- AM_CONDITIONAL([device_driver_3c503], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:274: -1- m4_pattern_allow([^device_driver_3c503_TRUE$])
m4trace:linux/configfrag.ac:274: -1- m4_pattern_allow([^device_driver_3c503_FALSE$])
m4trace:linux/configfrag.ac:274: -1- _AM_SUBST_NOTMAKE([device_driver_3c503_TRUE])
m4trace:linux/configfrag.ac:274: -1- _AM_SUBST_NOTMAKE([device_driver_3c503_FALSE])
m4trace:linux/configfrag.ac:274: -1- m4_pattern_allow([^CONFIG_EL2$])
m4trace:linux/configfrag.ac:278: -1- AC_Linux_DRIVER([3c505], [Ethernet controller 3Com 505 (3c505, elplus)], [CONFIG_ELPLUS], [net])
m4trace:linux/configfrag.ac:278: -1- AC_OPTION_Linux_ix86_at([3c505], [Linux device driver for Ethernet controller 3Com 505 (3c505, elplus); on ix86-at enabled
    by default], [CONFIG_ELPLUS], [net])
m4trace:linux/configfrag.ac:278: -1- AM_CONDITIONAL([device_driver_3c505], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:278: -1- m4_pattern_allow([^device_driver_3c505_TRUE$])
m4trace:linux/configfrag.ac:278: -1- m4_pattern_allow([^device_driver_3c505_FALSE$])
m4trace:linux/configfrag.ac:278: -1- _AM_SUBST_NOTMAKE([device_driver_3c505_TRUE])
m4trace:linux/configfrag.ac:278: -1- _AM_SUBST_NOTMAKE([device_driver_3c505_FALSE])
m4trace:linux/configfrag.ac:278: -1- m4_pattern_allow([^CONFIG_ELPLUS$])
m4trace:linux/configfrag.ac:282: -1- AC_Linux_DRIVER([3c507], [Ethernet controller 3Com 507 (3c507, el16)], [CONFIG_EL16], [net])
m4trace:linux/configfrag.ac:282: -1- AC_OPTION_Linux_ix86_at([3c507], [Linux device driver for Ethernet controller 3Com 507 (3c507, el16); on ix86-at enabled
    by default], [CONFIG_EL16], [net])
m4trace:linux/configfrag.ac:282: -1- AM_CONDITIONAL([device_driver_3c507], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:282: -1- m4_pattern_allow([^device_driver_3c507_TRUE$])
m4trace:linux/configfrag.ac:282: -1- m4_pattern_allow([^device_driver_3c507_FALSE$])
m4trace:linux/configfrag.ac:282: -1- _AM_SUBST_NOTMAKE([device_driver_3c507_TRUE])
m4trace:linux/configfrag.ac:282: -1- _AM_SUBST_NOTMAKE([device_driver_3c507_FALSE])
m4trace:linux/configfrag.ac:282: -1- m4_pattern_allow([^CONFIG_EL16$])
m4trace:linux/configfrag.ac:286: -1- AC_Linux_DRIVER([3c509], [Ethernet controller 3Com 509/579 (3c509, 3c579) / Etherlink III], [CONFIG_EL3], [net])
m4trace:linux/configfrag.ac:286: -1- AC_OPTION_Linux_ix86_at([3c509], [Linux device driver for Ethernet controller 3Com 509/579 (3c509, 3c579) / Etherlink III; on ix86-at enabled
    by default], [CONFIG_EL3], [net])
m4trace:linux/configfrag.ac:286: -1- AM_CONDITIONAL([device_driver_3c509], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:286: -1- m4_pattern_allow([^device_driver_3c509_TRUE$])
m4trace:linux/configfrag.ac:286: -1- m4_pattern_allow([^device_driver_3c509_FALSE$])
m4trace:linux/configfrag.ac:286: -1- _AM_SUBST_NOTMAKE([device_driver_3c509_TRUE])
m4trace:linux/configfrag.ac:286: -1- _AM_SUBST_NOTMAKE([device_driver_3c509_FALSE])
m4trace:linux/configfrag.ac:286: -1- m4_pattern_allow([^CONFIG_EL3$])
m4trace:linux/configfrag.ac:290: -1- AC_Linux_DRIVER([3c59x], [Ethernet controller 3Com 59x/90x
    (3c59x, 3c590, 3c592, 3c595, 3c597, 3c90x, 3c900, 3c905)
    "Vortex/Boomerang"], [CONFIG_VORTEX], [net])
m4trace:linux/configfrag.ac:290: -1- AC_OPTION_Linux_ix86_at([3c59x], [Linux device driver for Ethernet controller 3Com 59x/90x
    (3c59x, 3c590, 3c592, 3c595, 3c597, 3c90x, 3c900, 3c905)
    "Vortex/Boomerang"; on ix86-at enabled
    by default], [CONFIG_VORTEX], [net])
m4trace:linux/configfrag.ac:290: -1- AM_CONDITIONAL([device_driver_3c59x], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:290: -1- m4_pattern_allow([^device_driver_3c59x_TRUE$])
m4trace:linux/configfrag.ac:290: -1- m4_pattern_allow([^device_driver_3c59x_FALSE$])
m4trace:linux/configfrag.ac:290: -1- _AM_SUBST_NOTMAKE([device_driver_3c59x_TRUE])
m4trace:linux/configfrag.ac:290: -1- _AM_SUBST_NOTMAKE([device_driver_3c59x_FALSE])
m4trace:linux/configfrag.ac:290: -1- m4_pattern_allow([^CONFIG_VORTEX$])
m4trace:linux/configfrag.ac:296: -1- AC_Linux_DRIVER([3c515], [Ethernet controller 3Com 515 ISA Fast EtherLink], [CONFIG_3C515], [net])
m4trace:linux/configfrag.ac:296: -1- AC_OPTION_Linux_ix86_at([3c515], [Linux device driver for Ethernet controller 3Com 515 ISA Fast EtherLink; on ix86-at enabled
    by default], [CONFIG_3C515], [net])
m4trace:linux/configfrag.ac:296: -1- AM_CONDITIONAL([device_driver_3c515], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:296: -1- m4_pattern_allow([^device_driver_3c515_TRUE$])
m4trace:linux/configfrag.ac:296: -1- m4_pattern_allow([^device_driver_3c515_FALSE$])
m4trace:linux/configfrag.ac:296: -1- _AM_SUBST_NOTMAKE([device_driver_3c515_TRUE])
m4trace:linux/configfrag.ac:296: -1- _AM_SUBST_NOTMAKE([device_driver_3c515_FALSE])
m4trace:linux/configfrag.ac:296: -1- m4_pattern_allow([^CONFIG_3C515$])
m4trace:linux/configfrag.ac:300: -1- AC_Linux_DRIVER([ac3200], [Ethernet controller Ansel Communications EISA 3200], [CONFIG_AC3200], [net])
m4trace:linux/configfrag.ac:300: -1- AC_OPTION_Linux_ix86_at([ac3200], [Linux device driver for Ethernet controller Ansel Communications EISA 3200; on ix86-at enabled
    by default], [CONFIG_AC3200], [net])
m4trace:linux/configfrag.ac:300: -1- AM_CONDITIONAL([device_driver_ac3200], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:300: -1- m4_pattern_allow([^device_driver_ac3200_TRUE$])
m4trace:linux/configfrag.ac:300: -1- m4_pattern_allow([^device_driver_ac3200_FALSE$])
m4trace:linux/configfrag.ac:300: -1- _AM_SUBST_NOTMAKE([device_driver_ac3200_TRUE])
m4trace:linux/configfrag.ac:300: -1- _AM_SUBST_NOTMAKE([device_driver_ac3200_FALSE])
m4trace:linux/configfrag.ac:300: -1- m4_pattern_allow([^CONFIG_AC3200$])
m4trace:linux/configfrag.ac:304: -1- AC_Linux_DRIVER([apricot], [Ethernet controller Apricot XEN-II on board ethernet], [CONFIG_APRICOT], [net])
m4trace:linux/configfrag.ac:304: -1- AC_OPTION_Linux_ix86_at([apricot], [Linux device driver for Ethernet controller Apricot XEN-II on board ethernet; on ix86-at enabled
    by default], [CONFIG_APRICOT], [net])
m4trace:linux/configfrag.ac:304: -1- AM_CONDITIONAL([device_driver_apricot], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:304: -1- m4_pattern_allow([^device_driver_apricot_TRUE$])
m4trace:linux/configfrag.ac:304: -1- m4_pattern_allow([^device_driver_apricot_FALSE$])
m4trace:linux/configfrag.ac:304: -1- _AM_SUBST_NOTMAKE([device_driver_apricot_TRUE])
m4trace:linux/configfrag.ac:304: -1- _AM_SUBST_NOTMAKE([device_driver_apricot_FALSE])
m4trace:linux/configfrag.ac:304: -1- m4_pattern_allow([^CONFIG_APRICOT$])
m4trace:linux/configfrag.ac:308: -1- AC_Linux_DRIVER([at1700], [Ethernet controller AT1700 (Fujitsu 86965)], [CONFIG_AT1700], [net])
m4trace:linux/configfrag.ac:308: -1- AC_OPTION_Linux_ix86_at([at1700], [Linux device driver for Ethernet controller AT1700 (Fujitsu 86965); on ix86-at enabled
    by default], [CONFIG_AT1700], [net])
m4trace:linux/configfrag.ac:308: -1- AM_CONDITIONAL([device_driver_at1700], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:308: -1- m4_pattern_allow([^device_driver_at1700_TRUE$])
m4trace:linux/configfrag.ac:308: -1- m4_pattern_allow([^device_driver_at1700_FALSE$])
m4trace:linux/configfrag.ac:308: -1- _AM_SUBST_NOTMAKE([device_driver_at1700_TRUE])
m4trace:linux/configfrag.ac:308: -1- _AM_SUBST_NOTMAKE([device_driver_at1700_FALSE])
m4trace:linux/configfrag.ac:308: -1- m4_pattern_allow([^CONFIG_AT1700$])
m4trace:linux/configfrag.ac:313: -1- AC_Linux_DRIVER_nodef([atp], [Ethernet controller AT-LAN-TEC/RealTek pocket adaptor], [CONFIG_ATP], [net])
m4trace:linux/configfrag.ac:313: -1- AC_OPTION_Linux_ix86_at_nodef([atp], [Linux device driver for Ethernet controller AT-LAN-TEC/RealTek pocket adaptor], [CONFIG_ATP], [net])
m4trace:linux/configfrag.ac:313: -1- AM_CONDITIONAL([device_driver_atp], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:313: -1- m4_pattern_allow([^device_driver_atp_TRUE$])
m4trace:linux/configfrag.ac:313: -1- m4_pattern_allow([^device_driver_atp_FALSE$])
m4trace:linux/configfrag.ac:313: -1- _AM_SUBST_NOTMAKE([device_driver_atp_TRUE])
m4trace:linux/configfrag.ac:313: -1- _AM_SUBST_NOTMAKE([device_driver_atp_FALSE])
m4trace:linux/configfrag.ac:313: -1- m4_pattern_allow([^CONFIG_ATP$])
m4trace:linux/configfrag.ac:320: -1- AC_Linux_DRIVER([de4x5], [Ethernet controller DE4x5 (de4x5, de425, de434, de435, de450, de500)], [CONFIG_DE4X5], [net])
m4trace:linux/configfrag.ac:320: -1- AC_OPTION_Linux_ix86_at([de4x5], [Linux device driver for Ethernet controller DE4x5 (de4x5, de425, de434, de435, de450, de500); on ix86-at enabled
    by default], [CONFIG_DE4X5], [net])
m4trace:linux/configfrag.ac:320: -1- AM_CONDITIONAL([device_driver_de4x5], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:320: -1- m4_pattern_allow([^device_driver_de4x5_TRUE$])
m4trace:linux/configfrag.ac:320: -1- m4_pattern_allow([^device_driver_de4x5_FALSE$])
m4trace:linux/configfrag.ac:320: -1- _AM_SUBST_NOTMAKE([device_driver_de4x5_TRUE])
m4trace:linux/configfrag.ac:320: -1- _AM_SUBST_NOTMAKE([device_driver_de4x5_FALSE])
m4trace:linux/configfrag.ac:320: -1- m4_pattern_allow([^CONFIG_DE4X5$])
m4trace:linux/configfrag.ac:324: -1- AC_Linux_DRIVER([de600], [Ethernet controller D-Link DE-600], [CONFIG_DE600], [net])
m4trace:linux/configfrag.ac:324: -1- AC_OPTION_Linux_ix86_at([de600], [Linux device driver for Ethernet controller D-Link DE-600; on ix86-at enabled
    by default], [CONFIG_DE600], [net])
m4trace:linux/configfrag.ac:324: -1- AM_CONDITIONAL([device_driver_de600], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:324: -1- m4_pattern_allow([^device_driver_de600_TRUE$])
m4trace:linux/configfrag.ac:324: -1- m4_pattern_allow([^device_driver_de600_FALSE$])
m4trace:linux/configfrag.ac:324: -1- _AM_SUBST_NOTMAKE([device_driver_de600_TRUE])
m4trace:linux/configfrag.ac:324: -1- _AM_SUBST_NOTMAKE([device_driver_de600_FALSE])
m4trace:linux/configfrag.ac:324: -1- m4_pattern_allow([^CONFIG_DE600$])
m4trace:linux/configfrag.ac:328: -1- AC_Linux_DRIVER([de620], [Ethernet controller D-Link DE-620], [CONFIG_DE620], [net])
m4trace:linux/configfrag.ac:328: -1- AC_OPTION_Linux_ix86_at([de620], [Linux device driver for Ethernet controller D-Link DE-620; on ix86-at enabled
    by default], [CONFIG_DE620], [net])
m4trace:linux/configfrag.ac:328: -1- AM_CONDITIONAL([device_driver_de620], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:328: -1- m4_pattern_allow([^device_driver_de620_TRUE$])
m4trace:linux/configfrag.ac:328: -1- m4_pattern_allow([^device_driver_de620_FALSE$])
m4trace:linux/configfrag.ac:328: -1- _AM_SUBST_NOTMAKE([device_driver_de620_TRUE])
m4trace:linux/configfrag.ac:328: -1- _AM_SUBST_NOTMAKE([device_driver_de620_FALSE])
m4trace:linux/configfrag.ac:328: -1- m4_pattern_allow([^CONFIG_DE620$])
m4trace:linux/configfrag.ac:332: -1- AC_Linux_DRIVER([depca], [Ethernet controller DEPCA
    (de100, de101, de200, de201, de202, de210, de422)], [CONFIG_DEPCA], [net])
m4trace:linux/configfrag.ac:332: -1- AC_OPTION_Linux_ix86_at([depca], [Linux device driver for Ethernet controller DEPCA
    (de100, de101, de200, de201, de202, de210, de422); on ix86-at enabled
    by default], [CONFIG_DEPCA], [net])
m4trace:linux/configfrag.ac:332: -1- AM_CONDITIONAL([device_driver_depca], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:332: -1- m4_pattern_allow([^device_driver_depca_TRUE$])
m4trace:linux/configfrag.ac:332: -1- m4_pattern_allow([^device_driver_depca_FALSE$])
m4trace:linux/configfrag.ac:332: -1- _AM_SUBST_NOTMAKE([device_driver_depca_TRUE])
m4trace:linux/configfrag.ac:332: -1- _AM_SUBST_NOTMAKE([device_driver_depca_FALSE])
m4trace:linux/configfrag.ac:332: -1- m4_pattern_allow([^CONFIG_DEPCA$])
m4trace:linux/configfrag.ac:337: -1- AC_Linux_DRIVER([e2100], [Ethernet controller Cabletron E21xx], [CONFIG_E2100], [net])
m4trace:linux/configfrag.ac:337: -1- AC_OPTION_Linux_ix86_at([e2100], [Linux device driver for Ethernet controller Cabletron E21xx; on ix86-at enabled
    by default], [CONFIG_E2100], [net])
m4trace:linux/configfrag.ac:337: -1- AM_CONDITIONAL([device_driver_e2100], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:337: -1- m4_pattern_allow([^device_driver_e2100_TRUE$])
m4trace:linux/configfrag.ac:337: -1- m4_pattern_allow([^device_driver_e2100_FALSE$])
m4trace:linux/configfrag.ac:337: -1- _AM_SUBST_NOTMAKE([device_driver_e2100_TRUE])
m4trace:linux/configfrag.ac:337: -1- _AM_SUBST_NOTMAKE([device_driver_e2100_FALSE])
m4trace:linux/configfrag.ac:337: -1- m4_pattern_allow([^CONFIG_E2100$])
m4trace:linux/configfrag.ac:341: -1- AC_Linux_DRIVER([eepro], [Ethernet controller EtherExpressPro], [CONFIG_EEXPRESS_PRO], [net])
m4trace:linux/configfrag.ac:341: -1- AC_OPTION_Linux_ix86_at([eepro], [Linux device driver for Ethernet controller EtherExpressPro; on ix86-at enabled
    by default], [CONFIG_EEXPRESS_PRO], [net])
m4trace:linux/configfrag.ac:341: -1- AM_CONDITIONAL([device_driver_eepro], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:341: -1- m4_pattern_allow([^device_driver_eepro_TRUE$])
m4trace:linux/configfrag.ac:341: -1- m4_pattern_allow([^device_driver_eepro_FALSE$])
m4trace:linux/configfrag.ac:341: -1- _AM_SUBST_NOTMAKE([device_driver_eepro_TRUE])
m4trace:linux/configfrag.ac:341: -1- _AM_SUBST_NOTMAKE([device_driver_eepro_FALSE])
m4trace:linux/configfrag.ac:341: -1- m4_pattern_allow([^CONFIG_EEXPRESS_PRO$])
m4trace:linux/configfrag.ac:345: -1- AC_Linux_DRIVER([eepro100], [Ethernet controller Intel EtherExpressPro PCI 10+/100B/100+], [CONFIG_EEXPRESS_PRO100B], [net])
m4trace:linux/configfrag.ac:345: -1- AC_OPTION_Linux_ix86_at([eepro100], [Linux device driver for Ethernet controller Intel EtherExpressPro PCI 10+/100B/100+; on ix86-at enabled
    by default], [CONFIG_EEXPRESS_PRO100B], [net])
m4trace:linux/configfrag.ac:345: -1- AM_CONDITIONAL([device_driver_eepro100], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:345: -1- m4_pattern_allow([^device_driver_eepro100_TRUE$])
m4trace:linux/configfrag.ac:345: -1- m4_pattern_allow([^device_driver_eepro100_FALSE$])
m4trace:linux/configfrag.ac:345: -1- _AM_SUBST_NOTMAKE([device_driver_eepro100_TRUE])
m4trace:linux/configfrag.ac:345: -1- _AM_SUBST_NOTMAKE([device_driver_eepro100_FALSE])
m4trace:linux/configfrag.ac:345: -1- m4_pattern_allow([^CONFIG_EEXPRESS_PRO100B$])
m4trace:linux/configfrag.ac:349: -1- AC_Linux_DRIVER([eexpress], [Ethernet controller EtherExpress 16], [CONFIG_EEXPRESS], [net])
m4trace:linux/configfrag.ac:349: -1- AC_OPTION_Linux_ix86_at([eexpress], [Linux device driver for Ethernet controller EtherExpress 16; on ix86-at enabled
    by default], [CONFIG_EEXPRESS], [net])
m4trace:linux/configfrag.ac:349: -1- AM_CONDITIONAL([device_driver_eexpress], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:349: -1- m4_pattern_allow([^device_driver_eexpress_TRUE$])
m4trace:linux/configfrag.ac:349: -1- m4_pattern_allow([^device_driver_eexpress_FALSE$])
m4trace:linux/configfrag.ac:349: -1- _AM_SUBST_NOTMAKE([device_driver_eexpress_TRUE])
m4trace:linux/configfrag.ac:349: -1- _AM_SUBST_NOTMAKE([device_driver_eexpress_FALSE])
m4trace:linux/configfrag.ac:349: -1- m4_pattern_allow([^CONFIG_EEXPRESS$])
m4trace:linux/configfrag.ac:353: -1- AC_Linux_DRIVER([epic100], [Ethernet controller SMC 83c170/175 EPIC/100 (epic, epic100) / EtherPower II], [CONFIG_EPIC], [net])
m4trace:linux/configfrag.ac:353: -1- AC_OPTION_Linux_ix86_at([epic100], [Linux device driver for Ethernet controller SMC 83c170/175 EPIC/100 (epic, epic100) / EtherPower II; on ix86-at enabled
    by default], [CONFIG_EPIC], [net])
m4trace:linux/configfrag.ac:353: -1- AM_CONDITIONAL([device_driver_epic100], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:353: -1- m4_pattern_allow([^device_driver_epic100_TRUE$])
m4trace:linux/configfrag.ac:353: -1- m4_pattern_allow([^device_driver_epic100_FALSE$])
m4trace:linux/configfrag.ac:353: -1- _AM_SUBST_NOTMAKE([device_driver_epic100_TRUE])
m4trace:linux/configfrag.ac:353: -1- _AM_SUBST_NOTMAKE([device_driver_epic100_FALSE])
m4trace:linux/configfrag.ac:353: -1- m4_pattern_allow([^CONFIG_EPIC$])
m4trace:linux/configfrag.ac:357: -1- AC_Linux_DRIVER([eth16i], [Ethernet controller ICL EtherTeam 16i/32 (eth16i, eth32)], [CONFIG_ETH16I], [net])
m4trace:linux/configfrag.ac:357: -1- AC_OPTION_Linux_ix86_at([eth16i], [Linux device driver for Ethernet controller ICL EtherTeam 16i/32 (eth16i, eth32); on ix86-at enabled
    by default], [CONFIG_ETH16I], [net])
m4trace:linux/configfrag.ac:357: -1- AM_CONDITIONAL([device_driver_eth16i], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:357: -1- m4_pattern_allow([^device_driver_eth16i_TRUE$])
m4trace:linux/configfrag.ac:357: -1- m4_pattern_allow([^device_driver_eth16i_FALSE$])
m4trace:linux/configfrag.ac:357: -1- _AM_SUBST_NOTMAKE([device_driver_eth16i_TRUE])
m4trace:linux/configfrag.ac:357: -1- _AM_SUBST_NOTMAKE([device_driver_eth16i_FALSE])
m4trace:linux/configfrag.ac:357: -1- m4_pattern_allow([^CONFIG_ETH16I$])
m4trace:linux/configfrag.ac:361: -1- AC_Linux_DRIVER([ewrk3], [Ethernet controller EtherWORKS 3 (ewrk3, de203, de204, de205)], [CONFIG_EWRK3], [net])
m4trace:linux/configfrag.ac:361: -1- AC_OPTION_Linux_ix86_at([ewrk3], [Linux device driver for Ethernet controller EtherWORKS 3 (ewrk3, de203, de204, de205); on ix86-at enabled
    by default], [CONFIG_EWRK3], [net])
m4trace:linux/configfrag.ac:361: -1- AM_CONDITIONAL([device_driver_ewrk3], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:361: -1- m4_pattern_allow([^device_driver_ewrk3_TRUE$])
m4trace:linux/configfrag.ac:361: -1- m4_pattern_allow([^device_driver_ewrk3_FALSE$])
m4trace:linux/configfrag.ac:361: -1- _AM_SUBST_NOTMAKE([device_driver_ewrk3_TRUE])
m4trace:linux/configfrag.ac:361: -1- _AM_SUBST_NOTMAKE([device_driver_ewrk3_FALSE])
m4trace:linux/configfrag.ac:361: -1- m4_pattern_allow([^CONFIG_EWRK3$])
m4trace:linux/configfrag.ac:365: -1- AC_Linux_DRIVER([fmv18x], [Ethernet controller FMV-181/182/183/184], [CONFIG_FMV18X], [net])
m4trace:linux/configfrag.ac:365: -1- AC_OPTION_Linux_ix86_at([fmv18x], [Linux device driver for Ethernet controller FMV-181/182/183/184; on ix86-at enabled
    by default], [CONFIG_FMV18X], [net])
m4trace:linux/configfrag.ac:365: -1- AM_CONDITIONAL([device_driver_fmv18x], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:365: -1- m4_pattern_allow([^device_driver_fmv18x_TRUE$])
m4trace:linux/configfrag.ac:365: -1- m4_pattern_allow([^device_driver_fmv18x_FALSE$])
m4trace:linux/configfrag.ac:365: -1- _AM_SUBST_NOTMAKE([device_driver_fmv18x_TRUE])
m4trace:linux/configfrag.ac:365: -1- _AM_SUBST_NOTMAKE([device_driver_fmv18x_FALSE])
m4trace:linux/configfrag.ac:365: -1- m4_pattern_allow([^CONFIG_FMV18X$])
m4trace:linux/configfrag.ac:369: -1- AC_Linux_DRIVER([hamachi], [Ethernet controller Packet Engines "Hamachi" GNIC-2 Gigabit Ethernet], [CONFIG_HAMACHI], [net])
m4trace:linux/configfrag.ac:369: -1- AC_OPTION_Linux_ix86_at([hamachi], [Linux device driver for Ethernet controller Packet Engines "Hamachi" GNIC-2 Gigabit Ethernet; on ix86-at enabled
    by default], [CONFIG_HAMACHI], [net])
m4trace:linux/configfrag.ac:369: -1- AM_CONDITIONAL([device_driver_hamachi], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:369: -1- m4_pattern_allow([^device_driver_hamachi_TRUE$])
m4trace:linux/configfrag.ac:369: -1- m4_pattern_allow([^device_driver_hamachi_FALSE$])
m4trace:linux/configfrag.ac:369: -1- _AM_SUBST_NOTMAKE([device_driver_hamachi_TRUE])
m4trace:linux/configfrag.ac:369: -1- _AM_SUBST_NOTMAKE([device_driver_hamachi_FALSE])
m4trace:linux/configfrag.ac:369: -1- m4_pattern_allow([^CONFIG_HAMACHI$])
m4trace:linux/configfrag.ac:373: -1- AC_Linux_DRIVER([hp-plus], [Ethernet controller HP PCLAN+ (27247B and 27252A)], [CONFIG_HPLAN_PLUS], [net])
m4trace:linux/configfrag.ac:373: -1- AC_OPTION_Linux_ix86_at([hp-plus], [Linux device driver for Ethernet controller HP PCLAN+ (27247B and 27252A); on ix86-at enabled
    by default], [CONFIG_HPLAN_PLUS], [net])
m4trace:linux/configfrag.ac:373: -1- AM_CONDITIONAL([device_driver_hp_plus], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:373: -1- m4_pattern_allow([^device_driver_hp_plus_TRUE$])
m4trace:linux/configfrag.ac:373: -1- m4_pattern_allow([^device_driver_hp_plus_FALSE$])
m4trace:linux/configfrag.ac:373: -1- _AM_SUBST_NOTMAKE([device_driver_hp_plus_TRUE])
m4trace:linux/configfrag.ac:373: -1- _AM_SUBST_NOTMAKE([device_driver_hp_plus_FALSE])
m4trace:linux/configfrag.ac:373: -1- m4_pattern_allow([^CONFIG_HPLAN_PLUS$])
m4trace:linux/configfrag.ac:377: -1- AC_Linux_DRIVER([hp], [Ethernet controller HP PCLAN (27245 and other 27xxx series)], [CONFIG_HPLAN], [net])
m4trace:linux/configfrag.ac:377: -1- AC_OPTION_Linux_ix86_at([hp], [Linux device driver for Ethernet controller HP PCLAN (27245 and other 27xxx series); on ix86-at enabled
    by default], [CONFIG_HPLAN], [net])
m4trace:linux/configfrag.ac:377: -1- AM_CONDITIONAL([device_driver_hp], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:377: -1- m4_pattern_allow([^device_driver_hp_TRUE$])
m4trace:linux/configfrag.ac:377: -1- m4_pattern_allow([^device_driver_hp_FALSE$])
m4trace:linux/configfrag.ac:377: -1- _AM_SUBST_NOTMAKE([device_driver_hp_TRUE])
m4trace:linux/configfrag.ac:377: -1- _AM_SUBST_NOTMAKE([device_driver_hp_FALSE])
m4trace:linux/configfrag.ac:377: -1- m4_pattern_allow([^CONFIG_HPLAN$])
m4trace:linux/configfrag.ac:381: -1- AC_Linux_DRIVER([hp100], [Ethernet controller HP 10/100VG PCLAN (ISA, EISA, PCI)
    (hp100, hpj2577, hpj2573, hpj2585, hp27248b)], [CONFIG_HP100], [net])
m4trace:linux/configfrag.ac:381: -1- AC_OPTION_Linux_ix86_at([hp100], [Linux device driver for Ethernet controller HP 10/100VG PCLAN (ISA, EISA, PCI)
    (hp100, hpj2577, hpj2573, hpj2585, hp27248b); on ix86-at enabled
    by default], [CONFIG_HP100], [net])
m4trace:linux/configfrag.ac:381: -1- AM_CONDITIONAL([device_driver_hp100], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:381: -1- m4_pattern_allow([^device_driver_hp100_TRUE$])
m4trace:linux/configfrag.ac:381: -1- m4_pattern_allow([^device_driver_hp100_FALSE$])
m4trace:linux/configfrag.ac:381: -1- _AM_SUBST_NOTMAKE([device_driver_hp100_TRUE])
m4trace:linux/configfrag.ac:381: -1- _AM_SUBST_NOTMAKE([device_driver_hp100_FALSE])
m4trace:linux/configfrag.ac:381: -1- m4_pattern_allow([^CONFIG_HP100$])
m4trace:linux/configfrag.ac:386: -1- AC_Linux_DRIVER([intel-gige], [Ethernet controller Intel PCI Gigabit Ethernet], [CONFIG_INTEL_GIGE], [net])
m4trace:linux/configfrag.ac:386: -1- AC_OPTION_Linux_ix86_at([intel-gige], [Linux device driver for Ethernet controller Intel PCI Gigabit Ethernet; on ix86-at enabled
    by default], [CONFIG_INTEL_GIGE], [net])
m4trace:linux/configfrag.ac:386: -1- AM_CONDITIONAL([device_driver_intel_gige], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:386: -1- m4_pattern_allow([^device_driver_intel_gige_TRUE$])
m4trace:linux/configfrag.ac:386: -1- m4_pattern_allow([^device_driver_intel_gige_FALSE$])
m4trace:linux/configfrag.ac:386: -1- _AM_SUBST_NOTMAKE([device_driver_intel_gige_TRUE])
m4trace:linux/configfrag.ac:386: -1- _AM_SUBST_NOTMAKE([device_driver_intel_gige_FALSE])
m4trace:linux/configfrag.ac:386: -1- m4_pattern_allow([^CONFIG_INTEL_GIGE$])
m4trace:linux/configfrag.ac:390: -1- AC_Linux_DRIVER([lance], [Ethernet controller AMD LANCE and PCnet (at1500, ne2100)], [CONFIG_LANCE], [net])
m4trace:linux/configfrag.ac:390: -1- AC_OPTION_Linux_ix86_at([lance], [Linux device driver for Ethernet controller AMD LANCE and PCnet (at1500, ne2100); on ix86-at enabled
    by default], [CONFIG_LANCE], [net])
m4trace:linux/configfrag.ac:390: -1- AM_CONDITIONAL([device_driver_lance], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:390: -1- m4_pattern_allow([^device_driver_lance_TRUE$])
m4trace:linux/configfrag.ac:390: -1- m4_pattern_allow([^device_driver_lance_FALSE$])
m4trace:linux/configfrag.ac:390: -1- _AM_SUBST_NOTMAKE([device_driver_lance_TRUE])
m4trace:linux/configfrag.ac:390: -1- _AM_SUBST_NOTMAKE([device_driver_lance_FALSE])
m4trace:linux/configfrag.ac:390: -1- m4_pattern_allow([^CONFIG_LANCE$])
m4trace:linux/configfrag.ac:394: -1- AC_Linux_DRIVER([myson803], [Ethernet controller Myson MTD803 Ethernet adapter series], [CONFIG_MYSON803], [net])
m4trace:linux/configfrag.ac:394: -1- AC_OPTION_Linux_ix86_at([myson803], [Linux device driver for Ethernet controller Myson MTD803 Ethernet adapter series; on ix86-at enabled
    by default], [CONFIG_MYSON803], [net])
m4trace:linux/configfrag.ac:394: -1- AM_CONDITIONAL([device_driver_myson803], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:394: -1- m4_pattern_allow([^device_driver_myson803_TRUE$])
m4trace:linux/configfrag.ac:394: -1- m4_pattern_allow([^device_driver_myson803_FALSE$])
m4trace:linux/configfrag.ac:394: -1- _AM_SUBST_NOTMAKE([device_driver_myson803_TRUE])
m4trace:linux/configfrag.ac:394: -1- _AM_SUBST_NOTMAKE([device_driver_myson803_FALSE])
m4trace:linux/configfrag.ac:394: -1- m4_pattern_allow([^CONFIG_MYSON803$])
m4trace:linux/configfrag.ac:398: -1- AC_Linux_DRIVER([natsemi], [Ethernet controller National Semiconductor DP8381x series PCI Ethernet], [CONFIG_NATSEMI], [net])
m4trace:linux/configfrag.ac:398: -1- AC_OPTION_Linux_ix86_at([natsemi], [Linux device driver for Ethernet controller National Semiconductor DP8381x series PCI Ethernet; on ix86-at enabled
    by default], [CONFIG_NATSEMI], [net])
m4trace:linux/configfrag.ac:398: -1- AM_CONDITIONAL([device_driver_natsemi], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:398: -1- m4_pattern_allow([^device_driver_natsemi_TRUE$])
m4trace:linux/configfrag.ac:398: -1- m4_pattern_allow([^device_driver_natsemi_FALSE$])
m4trace:linux/configfrag.ac:398: -1- _AM_SUBST_NOTMAKE([device_driver_natsemi_TRUE])
m4trace:linux/configfrag.ac:398: -1- _AM_SUBST_NOTMAKE([device_driver_natsemi_FALSE])
m4trace:linux/configfrag.ac:398: -1- m4_pattern_allow([^CONFIG_NATSEMI$])
m4trace:linux/configfrag.ac:402: -1- AC_Linux_DRIVER_qemu([ne], [Ethernet controller NE2000/NE1000 ISA (ne, ne1000, ne2000)], [CONFIG_NE2000], [net])
m4trace:linux/configfrag.ac:402: -1- AC_OPTION_Linux_ix86_at([ne], [Linux device driver for Ethernet controller NE2000/NE1000 ISA (ne, ne1000, ne2000); on ix86-at enabled
    by default and for qemu], [CONFIG_NE2000], [net])
m4trace:linux/configfrag.ac:402: -1- AM_CONDITIONAL([device_driver_ne], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:402: -1- m4_pattern_allow([^device_driver_ne_TRUE$])
m4trace:linux/configfrag.ac:402: -1- m4_pattern_allow([^device_driver_ne_FALSE$])
m4trace:linux/configfrag.ac:402: -1- _AM_SUBST_NOTMAKE([device_driver_ne_TRUE])
m4trace:linux/configfrag.ac:402: -1- _AM_SUBST_NOTMAKE([device_driver_ne_FALSE])
m4trace:linux/configfrag.ac:402: -1- m4_pattern_allow([^CONFIG_NE2000$])
m4trace:linux/configfrag.ac:406: -1- AC_Linux_DRIVER([ne2k-pci], [Ethernet controller PCI NE2000], [CONFIG_NE2K_PCI], [net])
m4trace:linux/configfrag.ac:406: -1- AC_OPTION_Linux_ix86_at([ne2k-pci], [Linux device driver for Ethernet controller PCI NE2000; on ix86-at enabled
    by default], [CONFIG_NE2K_PCI], [net])
m4trace:linux/configfrag.ac:406: -1- AM_CONDITIONAL([device_driver_ne2k_pci], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:406: -1- m4_pattern_allow([^device_driver_ne2k_pci_TRUE$])
m4trace:linux/configfrag.ac:406: -1- m4_pattern_allow([^device_driver_ne2k_pci_FALSE$])
m4trace:linux/configfrag.ac:406: -1- _AM_SUBST_NOTMAKE([device_driver_ne2k_pci_TRUE])
m4trace:linux/configfrag.ac:406: -1- _AM_SUBST_NOTMAKE([device_driver_ne2k_pci_FALSE])
m4trace:linux/configfrag.ac:406: -1- m4_pattern_allow([^CONFIG_NE2K_PCI$])
m4trace:linux/configfrag.ac:410: -1- AC_Linux_DRIVER([ni52], [Ethernet controller NI5210], [CONFIG_NI52], [net])
m4trace:linux/configfrag.ac:410: -1- AC_OPTION_Linux_ix86_at([ni52], [Linux device driver for Ethernet controller NI5210; on ix86-at enabled
    by default], [CONFIG_NI52], [net])
m4trace:linux/configfrag.ac:410: -1- AM_CONDITIONAL([device_driver_ni52], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:410: -1- m4_pattern_allow([^device_driver_ni52_TRUE$])
m4trace:linux/configfrag.ac:410: -1- m4_pattern_allow([^device_driver_ni52_FALSE$])
m4trace:linux/configfrag.ac:410: -1- _AM_SUBST_NOTMAKE([device_driver_ni52_TRUE])
m4trace:linux/configfrag.ac:410: -1- _AM_SUBST_NOTMAKE([device_driver_ni52_FALSE])
m4trace:linux/configfrag.ac:410: -1- m4_pattern_allow([^CONFIG_NI52$])
m4trace:linux/configfrag.ac:414: -1- AC_Linux_DRIVER([ni65], [Ethernet controller NI6510], [CONFIG_NI65], [net])
m4trace:linux/configfrag.ac:414: -1- AC_OPTION_Linux_ix86_at([ni65], [Linux device driver for Ethernet controller NI6510; on ix86-at enabled
    by default], [CONFIG_NI65], [net])
m4trace:linux/configfrag.ac:414: -1- AM_CONDITIONAL([device_driver_ni65], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:414: -1- m4_pattern_allow([^device_driver_ni65_TRUE$])
m4trace:linux/configfrag.ac:414: -1- m4_pattern_allow([^device_driver_ni65_FALSE$])
m4trace:linux/configfrag.ac:414: -1- _AM_SUBST_NOTMAKE([device_driver_ni65_TRUE])
m4trace:linux/configfrag.ac:414: -1- _AM_SUBST_NOTMAKE([device_driver_ni65_FALSE])
m4trace:linux/configfrag.ac:414: -1- m4_pattern_allow([^CONFIG_NI65$])
m4trace:linux/configfrag.ac:418: -1- AC_Linux_DRIVER([ns820], [Ethernet controller National Semiconductor DP8382x series PCI Ethernet], [CONFIG_NS820], [net])
m4trace:linux/configfrag.ac:418: -1- AC_OPTION_Linux_ix86_at([ns820], [Linux device driver for Ethernet controller National Semiconductor DP8382x series PCI Ethernet; on ix86-at enabled
    by default], [CONFIG_NS820], [net])
m4trace:linux/configfrag.ac:418: -1- AM_CONDITIONAL([device_driver_ns820], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:418: -1- m4_pattern_allow([^device_driver_ns820_TRUE$])
m4trace:linux/configfrag.ac:418: -1- m4_pattern_allow([^device_driver_ns820_FALSE$])
m4trace:linux/configfrag.ac:418: -1- _AM_SUBST_NOTMAKE([device_driver_ns820_TRUE])
m4trace:linux/configfrag.ac:418: -1- _AM_SUBST_NOTMAKE([device_driver_ns820_FALSE])
m4trace:linux/configfrag.ac:418: -1- m4_pattern_allow([^CONFIG_NS820$])
m4trace:linux/configfrag.ac:422: -1- AC_Linux_DRIVER([pcnet32], [Ethernet controller AMD PCI PCnet32 (PCI bus NE2100 cards)], [CONFIG_PCNET32], [net])
m4trace:linux/configfrag.ac:422: -1- AC_OPTION_Linux_ix86_at([pcnet32], [Linux device driver for Ethernet controller AMD PCI PCnet32 (PCI bus NE2100 cards); on ix86-at enabled
    by default], [CONFIG_PCNET32], [net])
m4trace:linux/configfrag.ac:422: -1- AM_CONDITIONAL([device_driver_pcnet32], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:422: -1- m4_pattern_allow([^device_driver_pcnet32_TRUE$])
m4trace:linux/configfrag.ac:422: -1- m4_pattern_allow([^device_driver_pcnet32_FALSE$])
m4trace:linux/configfrag.ac:422: -1- _AM_SUBST_NOTMAKE([device_driver_pcnet32_TRUE])
m4trace:linux/configfrag.ac:422: -1- _AM_SUBST_NOTMAKE([device_driver_pcnet32_FALSE])
m4trace:linux/configfrag.ac:422: -1- m4_pattern_allow([^CONFIG_PCNET32$])
m4trace:linux/configfrag.ac:426: -1- AC_Linux_DRIVER([rtl8139], [Ethernet controller RealTek 8129/8139 (rtl8129, rtl8139) (not 8019/8029!)], [CONFIG_RTL8139], [net])
m4trace:linux/configfrag.ac:426: -1- AC_OPTION_Linux_ix86_at([rtl8139], [Linux device driver for Ethernet controller RealTek 8129/8139 (rtl8129, rtl8139) (not 8019/8029!); on ix86-at enabled
    by default], [CONFIG_RTL8139], [net])
m4trace:linux/configfrag.ac:426: -1- AM_CONDITIONAL([device_driver_rtl8139], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:426: -1- m4_pattern_allow([^device_driver_rtl8139_TRUE$])
m4trace:linux/configfrag.ac:426: -1- m4_pattern_allow([^device_driver_rtl8139_FALSE$])
m4trace:linux/configfrag.ac:426: -1- _AM_SUBST_NOTMAKE([device_driver_rtl8139_TRUE])
m4trace:linux/configfrag.ac:426: -1- _AM_SUBST_NOTMAKE([device_driver_rtl8139_FALSE])
m4trace:linux/configfrag.ac:426: -1- m4_pattern_allow([^CONFIG_RTL8139$])
m4trace:linux/configfrag.ac:430: -1- AC_Linux_DRIVER([seeq8005], [Ethernet controller Seeq8005], [CONFIG_SEEQ8005], [net])
m4trace:linux/configfrag.ac:430: -1- AC_OPTION_Linux_ix86_at([seeq8005], [Linux device driver for Ethernet controller Seeq8005; on ix86-at enabled
    by default], [CONFIG_SEEQ8005], [net])
m4trace:linux/configfrag.ac:430: -1- AM_CONDITIONAL([device_driver_seeq8005], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:430: -1- m4_pattern_allow([^device_driver_seeq8005_TRUE$])
m4trace:linux/configfrag.ac:430: -1- m4_pattern_allow([^device_driver_seeq8005_FALSE$])
m4trace:linux/configfrag.ac:430: -1- _AM_SUBST_NOTMAKE([device_driver_seeq8005_TRUE])
m4trace:linux/configfrag.ac:430: -1- _AM_SUBST_NOTMAKE([device_driver_seeq8005_FALSE])
m4trace:linux/configfrag.ac:430: -1- m4_pattern_allow([^CONFIG_SEEQ8005$])
m4trace:linux/configfrag.ac:434: -1- AC_Linux_DRIVER([sis900], [Ethernet controller SiS 900], [CONFIG_SIS900], [net])
m4trace:linux/configfrag.ac:434: -1- AC_OPTION_Linux_ix86_at([sis900], [Linux device driver for Ethernet controller SiS 900; on ix86-at enabled
    by default], [CONFIG_SIS900], [net])
m4trace:linux/configfrag.ac:434: -1- AM_CONDITIONAL([device_driver_sis900], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:434: -1- m4_pattern_allow([^device_driver_sis900_TRUE$])
m4trace:linux/configfrag.ac:434: -1- m4_pattern_allow([^device_driver_sis900_FALSE$])
m4trace:linux/configfrag.ac:434: -1- _AM_SUBST_NOTMAKE([device_driver_sis900_TRUE])
m4trace:linux/configfrag.ac:434: -1- _AM_SUBST_NOTMAKE([device_driver_sis900_FALSE])
m4trace:linux/configfrag.ac:434: -1- m4_pattern_allow([^CONFIG_SIS900$])
m4trace:linux/configfrag.ac:438: -1- AC_Linux_DRIVER([sk_g16], [Ethernet controller Schneider & Koch G16], [CONFIG_SK_G16], [net])
m4trace:linux/configfrag.ac:438: -1- AC_OPTION_Linux_ix86_at([sk_g16], [Linux device driver for Ethernet controller Schneider & Koch G16; on ix86-at enabled
    by default], [CONFIG_SK_G16], [net])
m4trace:linux/configfrag.ac:438: -1- AM_CONDITIONAL([device_driver_sk_g16], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:438: -1- m4_pattern_allow([^device_driver_sk_g16_TRUE$])
m4trace:linux/configfrag.ac:438: -1- m4_pattern_allow([^device_driver_sk_g16_FALSE$])
m4trace:linux/configfrag.ac:438: -1- _AM_SUBST_NOTMAKE([device_driver_sk_g16_TRUE])
m4trace:linux/configfrag.ac:438: -1- _AM_SUBST_NOTMAKE([device_driver_sk_g16_FALSE])
m4trace:linux/configfrag.ac:438: -1- m4_pattern_allow([^CONFIG_SK_G16$])
m4trace:linux/configfrag.ac:442: -1- AC_Linux_DRIVER([smc-ultra], [Ethernet controller SMC Ultra], [CONFIG_ULTRA], [net])
m4trace:linux/configfrag.ac:442: -1- AC_OPTION_Linux_ix86_at([smc-ultra], [Linux device driver for Ethernet controller SMC Ultra; on ix86-at enabled
    by default], [CONFIG_ULTRA], [net])
m4trace:linux/configfrag.ac:442: -1- AM_CONDITIONAL([device_driver_smc_ultra], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:442: -1- m4_pattern_allow([^device_driver_smc_ultra_TRUE$])
m4trace:linux/configfrag.ac:442: -1- m4_pattern_allow([^device_driver_smc_ultra_FALSE$])
m4trace:linux/configfrag.ac:442: -1- _AM_SUBST_NOTMAKE([device_driver_smc_ultra_TRUE])
m4trace:linux/configfrag.ac:442: -1- _AM_SUBST_NOTMAKE([device_driver_smc_ultra_FALSE])
m4trace:linux/configfrag.ac:442: -1- m4_pattern_allow([^CONFIG_ULTRA$])
m4trace:linux/configfrag.ac:446: -1- AC_Linux_DRIVER([smc-ultra32], [Ethernet controller SMC Ultra32], [CONFIG_ULTRA32], [net])
m4trace:linux/configfrag.ac:446: -1- AC_OPTION_Linux_ix86_at([smc-ultra32], [Linux device driver for Ethernet controller SMC Ultra32; on ix86-at enabled
    by default], [CONFIG_ULTRA32], [net])
m4trace:linux/configfrag.ac:446: -1- AM_CONDITIONAL([device_driver_smc_ultra32], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:446: -1- m4_pattern_allow([^device_driver_smc_ultra32_TRUE$])
m4trace:linux/configfrag.ac:446: -1- m4_pattern_allow([^device_driver_smc_ultra32_FALSE$])
m4trace:linux/configfrag.ac:446: -1- _AM_SUBST_NOTMAKE([device_driver_smc_ultra32_TRUE])
m4trace:linux/configfrag.ac:446: -1- _AM_SUBST_NOTMAKE([device_driver_smc_ultra32_FALSE])
m4trace:linux/configfrag.ac:446: -1- m4_pattern_allow([^CONFIG_ULTRA32$])
m4trace:linux/configfrag.ac:450: -1- AC_Linux_DRIVER([starfire], [Ethernet controller Adaptec Starfire network adapter], [CONFIG_STARFIRE], [net])
m4trace:linux/configfrag.ac:450: -1- AC_OPTION_Linux_ix86_at([starfire], [Linux device driver for Ethernet controller Adaptec Starfire network adapter; on ix86-at enabled
    by default], [CONFIG_STARFIRE], [net])
m4trace:linux/configfrag.ac:450: -1- AM_CONDITIONAL([device_driver_starfire], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:450: -1- m4_pattern_allow([^device_driver_starfire_TRUE$])
m4trace:linux/configfrag.ac:450: -1- m4_pattern_allow([^device_driver_starfire_FALSE$])
m4trace:linux/configfrag.ac:450: -1- _AM_SUBST_NOTMAKE([device_driver_starfire_TRUE])
m4trace:linux/configfrag.ac:450: -1- _AM_SUBST_NOTMAKE([device_driver_starfire_FALSE])
m4trace:linux/configfrag.ac:450: -1- m4_pattern_allow([^CONFIG_STARFIRE$])
m4trace:linux/configfrag.ac:454: -1- AC_Linux_DRIVER([sundance], [Ethernet controller Sundance ST201 "Alta" PCI Ethernet], [CONFIG_SUNDANCE], [net])
m4trace:linux/configfrag.ac:454: -1- AC_OPTION_Linux_ix86_at([sundance], [Linux device driver for Ethernet controller Sundance ST201 "Alta" PCI Ethernet; on ix86-at enabled
    by default], [CONFIG_SUNDANCE], [net])
m4trace:linux/configfrag.ac:454: -1- AM_CONDITIONAL([device_driver_sundance], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:454: -1- m4_pattern_allow([^device_driver_sundance_TRUE$])
m4trace:linux/configfrag.ac:454: -1- m4_pattern_allow([^device_driver_sundance_FALSE$])
m4trace:linux/configfrag.ac:454: -1- _AM_SUBST_NOTMAKE([device_driver_sundance_TRUE])
m4trace:linux/configfrag.ac:454: -1- _AM_SUBST_NOTMAKE([device_driver_sundance_FALSE])
m4trace:linux/configfrag.ac:454: -1- m4_pattern_allow([^CONFIG_SUNDANCE$])
m4trace:linux/configfrag.ac:458: -1- AC_Linux_DRIVER([tlan], [Ethernet controller TI ThunderLAN], [CONFIG_TLAN], [net])
m4trace:linux/configfrag.ac:458: -1- AC_OPTION_Linux_ix86_at([tlan], [Linux device driver for Ethernet controller TI ThunderLAN; on ix86-at enabled
    by default], [CONFIG_TLAN], [net])
m4trace:linux/configfrag.ac:458: -1- AM_CONDITIONAL([device_driver_tlan], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:458: -1- m4_pattern_allow([^device_driver_tlan_TRUE$])
m4trace:linux/configfrag.ac:458: -1- m4_pattern_allow([^device_driver_tlan_FALSE$])
m4trace:linux/configfrag.ac:458: -1- _AM_SUBST_NOTMAKE([device_driver_tlan_TRUE])
m4trace:linux/configfrag.ac:458: -1- _AM_SUBST_NOTMAKE([device_driver_tlan_FALSE])
m4trace:linux/configfrag.ac:458: -1- m4_pattern_allow([^CONFIG_TLAN$])
m4trace:linux/configfrag.ac:462: -1- AC_Linux_DRIVER([tulip], [Ethernet controller DECchip Tulip (dc21x4x) PCI (elcp, tulip)], [CONFIG_DEC_ELCP], [net])
m4trace:linux/configfrag.ac:462: -1- AC_OPTION_Linux_ix86_at([tulip], [Linux device driver for Ethernet controller DECchip Tulip (dc21x4x) PCI (elcp, tulip); on ix86-at enabled
    by default], [CONFIG_DEC_ELCP], [net])
m4trace:linux/configfrag.ac:462: -1- AM_CONDITIONAL([device_driver_tulip], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:462: -1- m4_pattern_allow([^device_driver_tulip_TRUE$])
m4trace:linux/configfrag.ac:462: -1- m4_pattern_allow([^device_driver_tulip_FALSE$])
m4trace:linux/configfrag.ac:462: -1- _AM_SUBST_NOTMAKE([device_driver_tulip_TRUE])
m4trace:linux/configfrag.ac:462: -1- _AM_SUBST_NOTMAKE([device_driver_tulip_FALSE])
m4trace:linux/configfrag.ac:462: -1- m4_pattern_allow([^CONFIG_DEC_ELCP$])
m4trace:linux/configfrag.ac:466: -1- AC_Linux_DRIVER([via-rhine], [Ethernet controller VIA Rhine], [CONFIG_VIA_RHINE], [net])
m4trace:linux/configfrag.ac:466: -1- AC_OPTION_Linux_ix86_at([via-rhine], [Linux device driver for Ethernet controller VIA Rhine; on ix86-at enabled
    by default], [CONFIG_VIA_RHINE], [net])
m4trace:linux/configfrag.ac:466: -1- AM_CONDITIONAL([device_driver_via_rhine], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:466: -1- m4_pattern_allow([^device_driver_via_rhine_TRUE$])
m4trace:linux/configfrag.ac:466: -1- m4_pattern_allow([^device_driver_via_rhine_FALSE$])
m4trace:linux/configfrag.ac:466: -1- _AM_SUBST_NOTMAKE([device_driver_via_rhine_TRUE])
m4trace:linux/configfrag.ac:466: -1- _AM_SUBST_NOTMAKE([device_driver_via_rhine_FALSE])
m4trace:linux/configfrag.ac:466: -1- m4_pattern_allow([^CONFIG_VIA_RHINE$])
m4trace:linux/configfrag.ac:471: -1- AC_Linux_DRIVER_nodef([wavelan], [Ethernet controller AT&T WaveLAN & DEC RoamAbout DS], [CONFIG_WAVELAN], [net])
m4trace:linux/configfrag.ac:471: -1- AC_OPTION_Linux_ix86_at_nodef([wavelan], [Linux device driver for Ethernet controller AT&T WaveLAN & DEC RoamAbout DS], [CONFIG_WAVELAN], [net])
m4trace:linux/configfrag.ac:471: -1- AM_CONDITIONAL([device_driver_wavelan], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:471: -1- m4_pattern_allow([^device_driver_wavelan_TRUE$])
m4trace:linux/configfrag.ac:471: -1- m4_pattern_allow([^device_driver_wavelan_FALSE$])
m4trace:linux/configfrag.ac:471: -1- _AM_SUBST_NOTMAKE([device_driver_wavelan_TRUE])
m4trace:linux/configfrag.ac:471: -1- _AM_SUBST_NOTMAKE([device_driver_wavelan_FALSE])
m4trace:linux/configfrag.ac:471: -1- m4_pattern_allow([^CONFIG_WAVELAN$])
m4trace:linux/configfrag.ac:475: -1- AC_Linux_DRIVER([wd], [Ethernet controller WD80x3], [CONFIG_WD80x3], [net])
m4trace:linux/configfrag.ac:475: -1- AC_OPTION_Linux_ix86_at([wd], [Linux device driver for Ethernet controller WD80x3; on ix86-at enabled
    by default], [CONFIG_WD80x3], [net])
m4trace:linux/configfrag.ac:475: -1- AM_CONDITIONAL([device_driver_wd], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:475: -1- m4_pattern_allow([^device_driver_wd_TRUE$])
m4trace:linux/configfrag.ac:475: -1- m4_pattern_allow([^device_driver_wd_FALSE$])
m4trace:linux/configfrag.ac:475: -1- _AM_SUBST_NOTMAKE([device_driver_wd_TRUE])
m4trace:linux/configfrag.ac:475: -1- _AM_SUBST_NOTMAKE([device_driver_wd_FALSE])
m4trace:linux/configfrag.ac:475: -1- m4_pattern_allow([^CONFIG_WD80x3$])
m4trace:linux/configfrag.ac:479: -1- AC_Linux_DRIVER([winbond-840], [Ethernet controller Winbond W89c840 PCI Ethernet], [CONFIG_WINBOND840], [net])
m4trace:linux/configfrag.ac:479: -1- AC_OPTION_Linux_ix86_at([winbond-840], [Linux device driver for Ethernet controller Winbond W89c840 PCI Ethernet; on ix86-at enabled
    by default], [CONFIG_WINBOND840], [net])
m4trace:linux/configfrag.ac:479: -1- AM_CONDITIONAL([device_driver_winbond_840], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:479: -1- m4_pattern_allow([^device_driver_winbond_840_TRUE$])
m4trace:linux/configfrag.ac:479: -1- m4_pattern_allow([^device_driver_winbond_840_FALSE$])
m4trace:linux/configfrag.ac:479: -1- _AM_SUBST_NOTMAKE([device_driver_winbond_840_TRUE])
m4trace:linux/configfrag.ac:479: -1- _AM_SUBST_NOTMAKE([device_driver_winbond_840_FALSE])
m4trace:linux/configfrag.ac:479: -1- m4_pattern_allow([^CONFIG_WINBOND840$])
m4trace:linux/configfrag.ac:483: -1- AC_Linux_DRIVER([yellowfin], [Ethernet controller Packet Engines Yellowfin Gigabit-NIC], [CONFIG_YELLOWFIN], [net])
m4trace:linux/configfrag.ac:483: -1- AC_OPTION_Linux_ix86_at([yellowfin], [Linux device driver for Ethernet controller Packet Engines Yellowfin Gigabit-NIC; on ix86-at enabled
    by default], [CONFIG_YELLOWFIN], [net])
m4trace:linux/configfrag.ac:483: -1- AM_CONDITIONAL([device_driver_yellowfin], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:483: -1- m4_pattern_allow([^device_driver_yellowfin_TRUE$])
m4trace:linux/configfrag.ac:483: -1- m4_pattern_allow([^device_driver_yellowfin_FALSE$])
m4trace:linux/configfrag.ac:483: -1- _AM_SUBST_NOTMAKE([device_driver_yellowfin_TRUE])
m4trace:linux/configfrag.ac:483: -1- _AM_SUBST_NOTMAKE([device_driver_yellowfin_FALSE])
m4trace:linux/configfrag.ac:483: -1- m4_pattern_allow([^CONFIG_YELLOWFIN$])
m4trace:linux/configfrag.ac:487: -1- AC_Linux_DRIVER([znet], [Ethernet controller Zenith Z-Note (znet, znote)], [CONFIG_ZNET], [net])
m4trace:linux/configfrag.ac:487: -1- AC_OPTION_Linux_ix86_at([znet], [Linux device driver for Ethernet controller Zenith Z-Note (znet, znote); on ix86-at enabled
    by default], [CONFIG_ZNET], [net])
m4trace:linux/configfrag.ac:487: -1- AM_CONDITIONAL([device_driver_znet], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:487: -1- m4_pattern_allow([^device_driver_znet_TRUE$])
m4trace:linux/configfrag.ac:487: -1- m4_pattern_allow([^device_driver_znet_FALSE$])
m4trace:linux/configfrag.ac:487: -1- _AM_SUBST_NOTMAKE([device_driver_znet_TRUE])
m4trace:linux/configfrag.ac:487: -1- _AM_SUBST_NOTMAKE([device_driver_znet_FALSE])
m4trace:linux/configfrag.ac:487: -1- m4_pattern_allow([^CONFIG_ZNET$])
m4trace:linux/configfrag.ac:494: -1- AC_Linux_DRIVER([i82365], [Intel 82365 PC Card controller], [CONFIG_I82365], [pcmcia])
m4trace:linux/configfrag.ac:494: -1- AC_OPTION_Linux_ix86_at([i82365], [Linux device driver for Intel 82365 PC Card controller; on ix86-at enabled
    by default], [CONFIG_I82365], [pcmcia])
m4trace:linux/configfrag.ac:494: -1- AM_CONDITIONAL([device_driver_i82365], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:494: -1- m4_pattern_allow([^device_driver_i82365_TRUE$])
m4trace:linux/configfrag.ac:494: -1- m4_pattern_allow([^device_driver_i82365_FALSE$])
m4trace:linux/configfrag.ac:494: -1- _AM_SUBST_NOTMAKE([device_driver_i82365_TRUE])
m4trace:linux/configfrag.ac:494: -1- _AM_SUBST_NOTMAKE([device_driver_i82365_FALSE])
m4trace:linux/configfrag.ac:494: -1- m4_pattern_allow([^CONFIG_I82365$])
m4trace:linux/configfrag.ac:499: -1- AC_OPTION_Linux_ix86_at([pcmcia-isa], [isa bus support in the pcmcia core; on ix86-at enabled by default], [CONFIG_ISA], [pcmcia])
m4trace:linux/configfrag.ac:499: -1- AM_CONDITIONAL([device_driver_pcmcia_isa], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:499: -1- m4_pattern_allow([^device_driver_pcmcia_isa_TRUE$])
m4trace:linux/configfrag.ac:499: -1- m4_pattern_allow([^device_driver_pcmcia_isa_FALSE$])
m4trace:linux/configfrag.ac:499: -1- _AM_SUBST_NOTMAKE([device_driver_pcmcia_isa_TRUE])
m4trace:linux/configfrag.ac:499: -1- _AM_SUBST_NOTMAKE([device_driver_pcmcia_isa_FALSE])
m4trace:linux/configfrag.ac:499: -1- m4_pattern_allow([^CONFIG_ISA$])
m4trace:linux/configfrag.ac:506: -1- AC_Linux_DRIVER([3c574_cs], [3Com 3c574 ``RoadRunner'' PCMCIA Ethernet], [CONFIG_3C574_CS], [pcmcia])
m4trace:linux/configfrag.ac:506: -1- AC_OPTION_Linux_ix86_at([3c574_cs], [Linux device driver for 3Com 3c574 ``RoadRunner'' PCMCIA Ethernet; on ix86-at enabled
    by default], [CONFIG_3C574_CS], [pcmcia])
m4trace:linux/configfrag.ac:506: -1- AM_CONDITIONAL([device_driver_3c574_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:506: -1- m4_pattern_allow([^device_driver_3c574_cs_TRUE$])
m4trace:linux/configfrag.ac:506: -1- m4_pattern_allow([^device_driver_3c574_cs_FALSE$])
m4trace:linux/configfrag.ac:506: -1- _AM_SUBST_NOTMAKE([device_driver_3c574_cs_TRUE])
m4trace:linux/configfrag.ac:506: -1- _AM_SUBST_NOTMAKE([device_driver_3c574_cs_FALSE])
m4trace:linux/configfrag.ac:506: -1- m4_pattern_allow([^CONFIG_3C574_CS$])
m4trace:linux/configfrag.ac:510: -1- AC_Linux_DRIVER([3c589_cs], [3Com 3c589 PCMCIA Ethernet card], [CONFIG_3C589_CS], [pcmcia])
m4trace:linux/configfrag.ac:510: -1- AC_OPTION_Linux_ix86_at([3c589_cs], [Linux device driver for 3Com 3c589 PCMCIA Ethernet card; on ix86-at enabled
    by default], [CONFIG_3C589_CS], [pcmcia])
m4trace:linux/configfrag.ac:510: -1- AM_CONDITIONAL([device_driver_3c589_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:510: -1- m4_pattern_allow([^device_driver_3c589_cs_TRUE$])
m4trace:linux/configfrag.ac:510: -1- m4_pattern_allow([^device_driver_3c589_cs_FALSE$])
m4trace:linux/configfrag.ac:510: -1- _AM_SUBST_NOTMAKE([device_driver_3c589_cs_TRUE])
m4trace:linux/configfrag.ac:510: -1- _AM_SUBST_NOTMAKE([device_driver_3c589_cs_FALSE])
m4trace:linux/configfrag.ac:510: -1- m4_pattern_allow([^CONFIG_3C589_CS$])
m4trace:linux/configfrag.ac:514: -1- AC_Linux_DRIVER([axnet_cs], [Asix AX88190-based PCMCIA Ethernet adapters], [CONFIG_AXNET_CS], [pcmcia])
m4trace:linux/configfrag.ac:514: -1- AC_OPTION_Linux_ix86_at([axnet_cs], [Linux device driver for Asix AX88190-based PCMCIA Ethernet adapters; on ix86-at enabled
    by default], [CONFIG_AXNET_CS], [pcmcia])
m4trace:linux/configfrag.ac:514: -1- AM_CONDITIONAL([device_driver_axnet_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:514: -1- m4_pattern_allow([^device_driver_axnet_cs_TRUE$])
m4trace:linux/configfrag.ac:514: -1- m4_pattern_allow([^device_driver_axnet_cs_FALSE$])
m4trace:linux/configfrag.ac:514: -1- _AM_SUBST_NOTMAKE([device_driver_axnet_cs_TRUE])
m4trace:linux/configfrag.ac:514: -1- _AM_SUBST_NOTMAKE([device_driver_axnet_cs_FALSE])
m4trace:linux/configfrag.ac:514: -1- m4_pattern_allow([^CONFIG_AXNET_CS$])
m4trace:linux/configfrag.ac:518: -1- AC_Linux_DRIVER([fmvj18x_cs], [fmvj18x chipset based PCMCIA Ethernet cards], [CONFIG_FMVJ18X_CS], [pcmcia])
m4trace:linux/configfrag.ac:518: -1- AC_OPTION_Linux_ix86_at([fmvj18x_cs], [Linux device driver for fmvj18x chipset based PCMCIA Ethernet cards; on ix86-at enabled
    by default], [CONFIG_FMVJ18X_CS], [pcmcia])
m4trace:linux/configfrag.ac:518: -1- AM_CONDITIONAL([device_driver_fmvj18x_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:518: -1- m4_pattern_allow([^device_driver_fmvj18x_cs_TRUE$])
m4trace:linux/configfrag.ac:518: -1- m4_pattern_allow([^device_driver_fmvj18x_cs_FALSE$])
m4trace:linux/configfrag.ac:518: -1- _AM_SUBST_NOTMAKE([device_driver_fmvj18x_cs_TRUE])
m4trace:linux/configfrag.ac:518: -1- _AM_SUBST_NOTMAKE([device_driver_fmvj18x_cs_FALSE])
m4trace:linux/configfrag.ac:518: -1- m4_pattern_allow([^CONFIG_FMVJ18X_CS$])
m4trace:linux/configfrag.ac:522: -1- AC_Linux_DRIVER([nmclan_cs], [New Media Ethernet LAN PCMCIA cards], [CONFIG_NMCLAN_CS], [pcmcia])
m4trace:linux/configfrag.ac:522: -1- AC_OPTION_Linux_ix86_at([nmclan_cs], [Linux device driver for New Media Ethernet LAN PCMCIA cards; on ix86-at enabled
    by default], [CONFIG_NMCLAN_CS], [pcmcia])
m4trace:linux/configfrag.ac:522: -1- AM_CONDITIONAL([device_driver_nmclan_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:522: -1- m4_pattern_allow([^device_driver_nmclan_cs_TRUE$])
m4trace:linux/configfrag.ac:522: -1- m4_pattern_allow([^device_driver_nmclan_cs_FALSE$])
m4trace:linux/configfrag.ac:522: -1- _AM_SUBST_NOTMAKE([device_driver_nmclan_cs_TRUE])
m4trace:linux/configfrag.ac:522: -1- _AM_SUBST_NOTMAKE([device_driver_nmclan_cs_FALSE])
m4trace:linux/configfrag.ac:522: -1- m4_pattern_allow([^CONFIG_NMCLAN_CS$])
m4trace:linux/configfrag.ac:526: -1- AC_Linux_DRIVER([pcnet_cs], [NS8390-based PCMCIA cards], [CONFIG_PCNET_CS], [pcmcia])
m4trace:linux/configfrag.ac:526: -1- AC_OPTION_Linux_ix86_at([pcnet_cs], [Linux device driver for NS8390-based PCMCIA cards; on ix86-at enabled
    by default], [CONFIG_PCNET_CS], [pcmcia])
m4trace:linux/configfrag.ac:526: -1- AM_CONDITIONAL([device_driver_pcnet_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:526: -1- m4_pattern_allow([^device_driver_pcnet_cs_TRUE$])
m4trace:linux/configfrag.ac:526: -1- m4_pattern_allow([^device_driver_pcnet_cs_FALSE$])
m4trace:linux/configfrag.ac:526: -1- _AM_SUBST_NOTMAKE([device_driver_pcnet_cs_TRUE])
m4trace:linux/configfrag.ac:526: -1- _AM_SUBST_NOTMAKE([device_driver_pcnet_cs_FALSE])
m4trace:linux/configfrag.ac:526: -1- m4_pattern_allow([^CONFIG_PCNET_CS$])
m4trace:linux/configfrag.ac:530: -1- AC_Linux_DRIVER([smc91c92_cs], [SMC91c92-based PCMCIA cards], [CONFIG_SMC91C92_CS], [pcmcia])
m4trace:linux/configfrag.ac:530: -1- AC_OPTION_Linux_ix86_at([smc91c92_cs], [Linux device driver for SMC91c92-based PCMCIA cards; on ix86-at enabled
    by default], [CONFIG_SMC91C92_CS], [pcmcia])
m4trace:linux/configfrag.ac:530: -1- AM_CONDITIONAL([device_driver_smc91c92_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:530: -1- m4_pattern_allow([^device_driver_smc91c92_cs_TRUE$])
m4trace:linux/configfrag.ac:530: -1- m4_pattern_allow([^device_driver_smc91c92_cs_FALSE$])
m4trace:linux/configfrag.ac:530: -1- _AM_SUBST_NOTMAKE([device_driver_smc91c92_cs_TRUE])
m4trace:linux/configfrag.ac:530: -1- _AM_SUBST_NOTMAKE([device_driver_smc91c92_cs_FALSE])
m4trace:linux/configfrag.ac:530: -1- m4_pattern_allow([^CONFIG_SMC91C92_CS$])
m4trace:linux/configfrag.ac:534: -1- AC_Linux_DRIVER([xirc2ps_cs], [Xircom CreditCard and Realport PCMCIA ethernet], [CONFIG_XIRC2PS_CS], [pcmcia])
m4trace:linux/configfrag.ac:534: -1- AC_OPTION_Linux_ix86_at([xirc2ps_cs], [Linux device driver for Xircom CreditCard and Realport PCMCIA ethernet; on ix86-at enabled
    by default], [CONFIG_XIRC2PS_CS], [pcmcia])
m4trace:linux/configfrag.ac:534: -1- AM_CONDITIONAL([device_driver_xirc2ps_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:534: -1- m4_pattern_allow([^device_driver_xirc2ps_cs_TRUE$])
m4trace:linux/configfrag.ac:534: -1- m4_pattern_allow([^device_driver_xirc2ps_cs_FALSE$])
m4trace:linux/configfrag.ac:534: -1- _AM_SUBST_NOTMAKE([device_driver_xirc2ps_cs_TRUE])
m4trace:linux/configfrag.ac:534: -1- _AM_SUBST_NOTMAKE([device_driver_xirc2ps_cs_FALSE])
m4trace:linux/configfrag.ac:534: -1- m4_pattern_allow([^CONFIG_XIRC2PS_CS$])
m4trace:linux/configfrag.ac:541: -1- AC_Linux_DRIVER([orinoco_cs], [Hermes or Prism 2 PCMCIA Wireless adapters (Orinoco)], [CONFIG_ORINOCO_CS], [wireless])
m4trace:linux/configfrag.ac:541: -1- AC_OPTION_Linux_ix86_at([orinoco_cs], [Linux device driver for Hermes or Prism 2 PCMCIA Wireless adapters (Orinoco); on ix86-at enabled
    by default], [CONFIG_ORINOCO_CS], [wireless])
m4trace:linux/configfrag.ac:541: -1- AM_CONDITIONAL([device_driver_orinoco_cs], [[[ x"$enableval" = xyes ]]])
m4trace:linux/configfrag.ac:541: -1- m4_pattern_allow([^device_driver_orinoco_cs_TRUE$])
m4trace:linux/configfrag.ac:541: -1- m4_pattern_allow([^device_driver_orinoco_cs_FALSE$])
m4trace:linux/configfrag.ac:541: -1- _AM_SUBST_NOTMAKE([device_driver_orinoco_cs_TRUE])
m4trace:linux/configfrag.ac:541: -1- _AM_SUBST_NOTMAKE([device_driver_orinoco_cs_FALSE])
m4trace:linux/configfrag.ac:541: -1- m4_pattern_allow([^CONFIG_ORINOCO_CS$])
m4trace:linux/configfrag.ac:552: -1- m4_pattern_allow([^CONFIG_INET$])
m4trace:linux/configfrag.ac:553: -1- AM_CONDITIONAL([device_driver_group_net], [true])
m4trace:linux/configfrag.ac:553: -1- m4_pattern_allow([^device_driver_group_net_TRUE$])
m4trace:linux/configfrag.ac:553: -1- m4_pattern_allow([^device_driver_group_net_FALSE$])
m4trace:linux/configfrag.ac:553: -1- _AM_SUBST_NOTMAKE([device_driver_group_net_TRUE])
m4trace:linux/configfrag.ac:553: -1- _AM_SUBST_NOTMAKE([device_driver_group_net_FALSE])
m4trace:linux/configfrag.ac:554: -1- AM_CONDITIONAL([device_driver_group_net], [false])
m4trace:linux/configfrag.ac:554: -1- m4_pattern_allow([^device_driver_group_net_TRUE$])
m4trace:linux/configfrag.ac:554: -1- m4_pattern_allow([^device_driver_group_net_FALSE$])
m4trace:linux/configfrag.ac:554: -1- _AM_SUBST_NOTMAKE([device_driver_group_net_TRUE])
m4trace:linux/configfrag.ac:554: -1- _AM_SUBST_NOTMAKE([device_driver_group_net_FALSE])
m4trace:linux/configfrag.ac:558: -1- m4_pattern_allow([^CONFIG_PCMCIA$])
m4trace:linux/configfrag.ac:559: -1- AM_CONDITIONAL([device_driver_group_pcmcia], [true])
m4trace:linux/configfrag.ac:559: -1- m4_pattern_allow([^device_driver_group_pcmcia_TRUE$])
m4trace:linux/configfrag.ac:559: -1- m4_pattern_allow([^device_driver_group_pcmcia_FALSE$])
m4trace:linux/configfrag.ac:559: -1- _AM_SUBST_NOTMAKE([device_driver_group_pcmcia_TRUE])
m4trace:linux/configfrag.ac:559: -1- _AM_SUBST_NOTMAKE([device_driver_group_pcmcia_FALSE])
m4trace:linux/configfrag.ac:560: -1- AM_CONDITIONAL([device_driver_group_pcmcia], [false])
m4trace:linux/configfrag.ac:560: -1- m4_pattern_allow([^device_driver_group_pcmcia_TRUE$])
m4trace:linux/configfrag.ac:560: -1- m4_pattern_allow([^device_driver_group_pcmcia_FALSE$])
m4trace:linux/configfrag.ac:560: -1- _AM_SUBST_NOTMAKE([device_driver_group_pcmcia_TRUE])
m4trace:linux/configfrag.ac:560: -1- _AM_SUBST_NOTMAKE([device_driver_group_pcmcia_FALSE])
m4trace:linux/configfrag.ac:564: -1- m4_pattern_allow([^CONFIG_SCSI$])
m4trace:linux/configfrag.ac:565: -1- AM_CONDITIONAL([device_driver_group_scsi], [true])
m4trace:linux/configfrag.ac:565: -1- m4_pattern_allow([^device_driver_group_scsi_TRUE$])
m4trace:linux/configfrag.ac:565: -1- m4_pattern_allow([^device_driver_group_scsi_FALSE$])
m4trace:linux/configfrag.ac:565: -1- _AM_SUBST_NOTMAKE([device_driver_group_scsi_TRUE])
m4trace:linux/configfrag.ac:565: -1- _AM_SUBST_NOTMAKE([device_driver_group_scsi_FALSE])
m4trace:linux/configfrag.ac:566: -1- AM_CONDITIONAL([device_driver_group_scsi], [false])
m4trace:linux/configfrag.ac:566: -1- m4_pattern_allow([^device_driver_group_scsi_TRUE$])
m4trace:linux/configfrag.ac:566: -1- m4_pattern_allow([^device_driver_group_scsi_FALSE$])
m4trace:linux/configfrag.ac:566: -1- _AM_SUBST_NOTMAKE([device_driver_group_scsi_TRUE])
m4trace:linux/configfrag.ac:566: -1- _AM_SUBST_NOTMAKE([device_driver_group_scsi_FALSE])
m4trace:linux/configfrag.ac:570: -1- m4_pattern_allow([^CONFIG_WIRELESS$])
m4trace:linux/configfrag.ac:577: -1- AC_DEFUN([hurd_host_CPU], [
  AC_DEFINE([CONFIG_M$1], [1], [$1])
  AC_DEFINE([CPU], [$1], [CPU])])
m4trace:linux/configfrag.ac:582: -1- AM_CONDITIONAL([CODE_linux], [true])
m4trace:linux/configfrag.ac:582: -1- m4_pattern_allow([^CODE_linux_TRUE$])
m4trace:linux/configfrag.ac:582: -1- m4_pattern_allow([^CODE_linux_FALSE$])
m4trace:linux/configfrag.ac:582: -1- _AM_SUBST_NOTMAKE([CODE_linux_TRUE])
m4trace:linux/configfrag.ac:582: -1- _AM_SUBST_NOTMAKE([CODE_linux_FALSE])
m4trace:linux/configfrag.ac:586: -1- hurd_host_CPU([386])
m4trace:linux/configfrag.ac:586: -1- m4_pattern_allow([^CONFIG_M386$])
m4trace:linux/configfrag.ac:586: -1- m4_pattern_allow([^CPU$])
m4trace:linux/configfrag.ac:588: -1- hurd_host_CPU([486])
m4trace:linux/configfrag.ac:588: -1- m4_pattern_allow([^CONFIG_M486$])
m4trace:linux/configfrag.ac:588: -1- m4_pattern_allow([^CPU$])
m4trace:linux/configfrag.ac:590: -1- hurd_host_CPU([586])
m4trace:linux/configfrag.ac:590: -1- m4_pattern_allow([^CONFIG_M586$])
m4trace:linux/configfrag.ac:590: -1- m4_pattern_allow([^CPU$])
m4trace:linux/configfrag.ac:592: -1- hurd_host_CPU([686])
m4trace:linux/configfrag.ac:592: -1- m4_pattern_allow([^CONFIG_M686$])
m4trace:linux/configfrag.ac:592: -1- m4_pattern_allow([^CPU$])
m4trace:linux/configfrag.ac:595: -1- hurd_host_CPU([486])
m4trace:linux/configfrag.ac:595: -1- m4_pattern_allow([^CONFIG_M486$])
m4trace:linux/configfrag.ac:595: -1- m4_pattern_allow([^CPU$])
m4trace:linux/configfrag.ac:599: -1- m4_pattern_allow([^LINUX_DEV$])
m4trace:linux/configfrag.ac:601: -1- m4_pattern_allow([^__KERNEL__$])
m4trace:linux/configfrag.ac:603: -1- m4_pattern_allow([^__SMP__$])
m4trace:linux/configfrag.ac:609: -1- AM_CONDITIONAL([CODE_linux], [false])
m4trace:linux/configfrag.ac:609: -1- m4_pattern_allow([^CODE_linux_TRUE$])
m4trace:linux/configfrag.ac:609: -1- m4_pattern_allow([^CODE_linux_FALSE$])
m4trace:linux/configfrag.ac:609: -1- _AM_SUBST_NOTMAKE([CODE_linux_TRUE])
m4trace:linux/configfrag.ac:609: -1- _AM_SUBST_NOTMAKE([CODE_linux_FALSE])
m4trace:configure.ac:152: -1- _m4_warn([syntax], [AC_LANG_CONFTEST: no AC_LANG_SOURCE call detected in body], [../../lib/autoconf/lang.m4:194: AC_LANG_CONFTEST is expanded from...
configure.ac:152: the top level])
m4trace:configure.ac:165: -1- AM_CONDITIONAL([disable_smashing_stack_protector], [[[ x"$ssp_possible" = xyes ]]])
m4trace:configure.ac:165: -1- m4_pattern_allow([^disable_smashing_stack_protector_TRUE$])
m4trace:configure.ac:165: -1- m4_pattern_allow([^disable_smashing_stack_protector_FALSE$])
m4trace:configure.ac:165: -1- _AM_SUBST_NOTMAKE([disable_smashing_stack_protector_TRUE])
m4trace:configure.ac:165: -1- _AM_SUBST_NOTMAKE([disable_smashing_stack_protector_FALSE])
m4trace:configure.ac:226: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:226: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:226: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:226: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:226: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:226: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:226: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:226: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:226: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
